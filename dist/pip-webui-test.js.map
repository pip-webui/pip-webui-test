{"version":3,"sources":["tests.js","generators/data_generators.js","generators/pip_generator.js","generators/test_collection.js","generators/test_data_service.js","generators/test_data_set.js","generators/user_data_generators.js","mocks/pip_mocked_announcements.js","mocks/pip_mocked_entry.js","mocks/pip_mocked_feedbacks.js","mocks/pip_mocked_guides.js","mocks/pip_mocked_images.js","mocks/pip_mocked_party.js","mocks/pip_mocked_resource.js","mocks/pip_mocked_servers_activities.js","mocks/pip_mocked_tips.js","mocks/pip_mocked_users.js","old/data_models/pip_users_data_model.js","old/pip_data_generator/pip_generate_user_party.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpttfile":"pip-webui-test.js","sourcesContent":["/**\r\n * @file Registration of WebUI tests\r\n * @copyright Digital Living Software Corp. 2014-2015\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipWebuiTests', [\r\n        'pipBasicGeneratorServices',\r\n        'pipFakeDataModel.Users',\r\n        'pipDataGenerator.UserParty',\r\n\r\n        'pipMocked',\r\n        'pipMocked.Users',\r\n        'pipMocked.Entry',\r\n        'pipMocked.Party',\r\n        'pipMocked.Announcements',\r\n        'pipMocked.Feedbacks',\r\n        'pipMocked.Tips',\r\n        'pipMocked.Guides',\r\n        'pipMocked.ServersActivities',\r\n        'pipMocked.Images',\r\n\r\n        'pipGenerators',\r\n        'pipGenerators.User',\r\n        'pipTestCollection'\r\n    ]);\r\n\r\n\r\n    thisModule.run(\r\n        ['pipMockedResource', 'MockedUsersResource', 'MockedCurrentUserResource', 'TruePathResource', 'MockedSigninResource', 'MockedSignupResource', 'MockedSignoutResource', 'MockedSignupValidateResource', 'MockedVerifyEmailResource', 'MockedRecoverPasswordResource', 'MockedResetPasswordResource', 'MockedChangePasswordResource', 'MockedUserSessionsResource', 'MockedTipsResource', 'MockedAnnouncementsResource', 'MockedFeedbacksResource', 'MockedGuidesResource', 'MockedImagesResource', 'MockedPartyResource', 'MockedServersActivitiesResource', function(pipMockedResource, MockedUsersResource, MockedCurrentUserResource, TruePathResource, MockedSigninResource,\r\n        MockedSignupResource, MockedSignoutResource, MockedSignupValidateResource, MockedVerifyEmailResource,\r\n        MockedRecoverPasswordResource, MockedResetPasswordResource, MockedChangePasswordResource, MockedUserSessionsResource,\r\n        MockedTipsResource, MockedAnnouncementsResource, MockedFeedbacksResource, MockedGuidesResource, MockedImagesResource,\r\n        MockedPartyResource, MockedServersActivitiesResource) {\r\n\r\n            pipMockedResource.addMocks(MockedUsersResource);\r\n            pipMockedResource.addMocks(MockedCurrentUserResource);\r\n\r\n            pipMockedResource.addMocks(MockedUserSessionsResource);\r\n\r\n            pipMockedResource.addMocks(MockedSigninResource);\r\n            pipMockedResource.addMocks(MockedSignupResource);\r\n            pipMockedResource.addMocks(MockedSignoutResource);\r\n            pipMockedResource.addMocks(MockedSignupValidateResource);\r\n            pipMockedResource.addMocks(MockedVerifyEmailResource);\r\n            pipMockedResource.addMocks(MockedRecoverPasswordResource);\r\n            pipMockedResource.addMocks(MockedResetPasswordResource);\r\n            pipMockedResource.addMocks(MockedChangePasswordResource);\r\n\r\n            // ----------------\r\n            pipMockedResource.addMocks(MockedTipsResource);\r\n            pipMockedResource.addMocks(MockedAnnouncementsResource);\r\n            pipMockedResource.addMocks(MockedFeedbacksResource);\r\n            pipMockedResource.addMocks(MockedGuidesResource);\r\n            pipMockedResource.addMocks(MockedImagesResource);\r\n            pipMockedResource.addMocks(MockedPartyResource);\r\n            pipMockedResource.addMocks(MockedServersActivitiesResource);\r\n            \r\n            pipMockedResource.addMocks(TruePathResource);\r\n            pipMockedResource.registerStandardResources();\r\n\r\n        }]\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file pipDataGenerators\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipGenerators', []);\r\n\r\n    thisModule.factory('pipDataGenerator', ['$log', function ($log) {\r\n\r\n        var dataGenerator = function(name, refs) {\r\n\r\n            // Collection name\r\n            this.name = name;\r\n            // List of references collection names\r\n            this.refs = refs; // string?    \r\n\r\n            this.initObject = initObject;\r\n            this.newObject = newObject;\r\n            this.newObjectList = newObjectList;\r\n            this.initObjectList = initObjectList;\r\n            this.updateObject = updateObject;\r\n        }\r\n\r\n             // Initializes object with default fields\r\n            function initObject(obj) {\r\n                var result;\r\n\r\n                return result;\r\n            }\r\n\r\n            // Create a new random object\r\n            function newObject(refs) {\r\n                var result;\r\n\r\n                return result;                \r\n            }\r\n\r\n            function newObjectList(count, refs) {\r\n                var result = [];\r\n\r\n                return result;                \r\n            }\r\n\r\n            function initObjectList(obj) {\r\n                var result = [];\r\n\r\n                return result;                \r\n            }\r\n\r\n            function updateObject(index, obj, refs) {\r\n                var result;\r\n\r\n                return result;                 \r\n            }\r\n\r\n        return dataGenerator;\r\n\r\n    }]);\r\n\r\n})();\r\n ","/**\r\n * @file Service provide utils\r\n * @copyright Digital Living Software Corp. 2014-2015\r\n */\r\n\r\n(function (_, chance) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipBasicGeneratorServices', []);\r\n\r\n    thisModule.service('pipBasicGeneratorServices', function () {\r\n        \r\n        var ABCD = 'abcdefghijklmnopqrstuvwxyz',\r\n            ABCD_CAPITALIZE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\r\n            DIGIT = '0123456789',\r\n            SIGN = ' .,;:-!?',\r\n\r\n            SERVER_URL = 'http://alpha.pipservices.net';\r\n\r\n        return {\r\n            ABCD: ABCD,\r\n            ABCD_CAPITALIZE: ABCD_CAPITALIZE,\r\n            DIGIT: DIGIT,\r\n            SIGN: SIGN,\r\n\r\n            getObjectId: getObjectId,\r\n            getOneWord: getOneWord,\r\n            getPassword: getPassword,\r\n            getEmail: getEmail,\r\n            serverUrl:serverUrl,\r\n            getName: getName,\r\n            getOne: getOne\r\n        };\r\n\r\n        // Returns random ID\r\n        function getObjectId(n, allowedChars) {\r\n            var poolObjectId = ABCD + DIGIT,\r\n                length = n || 16,\r\n                pool = allowedChars || poolObjectId;\r\n\r\n            return chance.string({length: length, pool: pool});\r\n        }\r\n\r\n        function getEmail() {\r\n            return chance.email();\r\n        }\r\n\r\n        function getPassword() {\r\n            return getOneWord(8);\r\n        }\r\n\r\n        // Returns random one from the passed asset\r\n        function getOne(arr) {\r\n            return _.sample(arr);\r\n        }\r\n\r\n        function serverUrl(serverUrl) {\r\n            if (serverUrl) {\r\n                SERVER_URL = serverUrl;\r\n            }\r\n\r\n            return SERVER_URL;\r\n        }\r\n\r\n        // Returns random word\r\n        function getOneWord(n) {\r\n            var length = n && n > 0 ? Math.floor(Math.random() * n) : null,\r\n                poolWord = ABCD + ABCD_CAPITALIZE;\r\n\r\n            return chance.word({length: length, pool: poolWord});\r\n        }\r\n\r\n        function getName() {\r\n            var name = chance.first() + ' ' + chance.name();\r\n\r\n            return name;\r\n        }\r\n\r\n    });\r\n\r\n})(window._, window.chance);\r\n","/**\r\n * @file pipTestCollection\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTestCollection', []);\r\n\r\n    // Collection of test data stored in test dataset\r\n    thisModule.factory('pipTestCollection', ['$log', function ($log) {\r\n\r\n        var testCollection = function(generator) { // generator: pipDataGenerator\r\n            this.constructor(generator);\r\n\r\n        }\r\n\r\n    // Initializes collection with init object list\r\n    // public init(): void;\r\n    // public getAll(): any[];\r\n    // public get(index: number): any[];\r\n    // public findById(id: string): any;\r\n    // public create(obj: any): any;\r\n    // public update(id: string, obj: any): any;\r\n    // public delete(id: string): any;\r\n\r\n        return testCollection;\r\n\r\n    }]);\r\n\r\n})();","/**\r\n * @file pipTestDataService\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTestDataService', []);\r\n\r\n    thisModule.factory('pipTestDataService', \r\n        ['pipAreasData', 'pipGoalsData', '$rootScope', 'pipCollections', 'NewsUAService', 'pipEnums', function(pipAreasData, pipGoalsData, $rootScope, pipCollections, NewsUAService, pipEnums) {\r\n\r\n    // Angular service that holds singleton test dataset that is shared across all\r\n    // Get singleton dataset\r\n    // public getDataset(): TestDataset;\r\n\r\n            return {\r\n                \r\n                \r\n            }\r\n        }]\r\n    );\r\n\r\n})();","/**\r\n * @file pipTestDataSet\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTestDataSet', []);\r\n\r\n    // Test dataset, that can be used to hold state of rest api\r\n    thisModule.factory('pipTestDataSet', ['$log', function ($log) {\r\n\r\n    // // Initializes all registered collectons\r\n    // public init(): void;\r\n    // // Registers a new collection\r\n    // public add(col: TestCollection);\r\n    // // Gets registered collection by its name\r\n    // public get(name: string): TestCollection;\r\n    \r\n    }]);\r\n\r\n})();","/**\r\n * @file pipUserDataGenerators\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipGenerators.User', []);\r\n\r\n    thisModule.factory('pipUserDataGenerator', ['pipDataGenerator', '$log', function (pipDataGenerator, $log) {\r\n            // var child = Object.create(pipDataGenerator);\r\n            var child = new pipDataGenerator('User', 'User refs');\r\n\r\n            child.someproperty = true;\r\n\r\n            return child;\r\n    }]);\r\n\r\n})();\r\n ","/**\r\n * @file MockedAnnouncementsResource\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * \r\n * Mocked:\r\n * /api/announcements/:id\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocked.Announcements', ['ngMockE2E', 'ngResource']);\r\n\r\n    thisModule.factory('MockedAnnouncementsResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/announcements';\r\n\r\n        child.register = function() {\r\n\r\n                   \r\n        }\r\n\r\n        return child;\r\n    }]);\r\n\r\n})();","/**\r\n * @file pipMockedEntry\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * \r\n *  Mocked:\r\n * /api/signup_validate\r\n * /api/verify_email\r\n * /api/users/:party_id/resend_email_verification\r\n * /api/change_password\r\n * /api/reset_password/api/recover_password\r\n * /api/signup\r\n * /api/signout\r\n * /api/signin\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocked.Entry', ['ngMockE2E', 'ngResource']);\r\n\r\n    thisModule.factory('MockedSigninResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/signin';\r\n\r\n        child.register = function() {\r\n\r\n            // POST /api/signin\r\n            // expected data { email: email, password: password, remember: remember}                 \r\n            $httpBackend.whenPOST(child.fakeUrl + child.api).respond(function(method, url, data, headers, params) {\r\n                console.log('pipMocks.Users22222', data, headers, params);\r\n\r\n                return [200, {}, {}];\r\n            });             \r\n        }\r\n\r\n        return child;\r\n    }]);    \r\n\r\n    thisModule.factory('MockedSignupResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/signup';\r\n\r\n        child.register = function() {\r\n\r\n            // POST /api/signup\r\n            // expected data { name: name, email: email, password: password, language: language}            \r\n            $httpBackend.whenPOST(child.fakeUrl + child.api).respond(function(method, url, data, headers, params) {\r\n                console.log('pipMocks.Users22222', data, headers, params);\r\n\r\n                return [200, {}, {}];\r\n            });             \r\n        }\r\n\r\n        return child;\r\n    }]); \r\n\r\n    thisModule.factory('MockedSignoutResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/signout';\r\n\r\n        child.register = function() {\r\n\r\n            // POST /api/signout\r\n            // expected data {}\r\n            $httpBackend.whenPOST(child.fakeUrl + child.api).respond(function(method, url, data, headers, params) {\r\n                console.log('pipMocks.Users22222', data, headers, params);\r\n\r\n                return [200, {}, {}];\r\n            });             \r\n        }\r\n\r\n        return child;\r\n    }]); \r\n\r\n    thisModule.factory('MockedSignupValidateResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/signup_validate';\r\n\r\n        child.register = function() {\r\n\r\n            // POST /api/signup_validate,\r\n            // expected data {email: newValue}            \r\n            $httpBackend.whenPOST(child.fakeUrl + child.api).respond(function(method, url, data, headers, params) {\r\n                console.log('pipMocks.Users22222', data, headers, params);\r\n\r\n                return [200, {}, {}];\r\n            });             \r\n        }\r\n\r\n        return child;\r\n    }]); \r\n\r\n    thisModule.factory('MockedVerifyEmailResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/verify_email';\r\n\r\n        child.register = function() {\r\n\r\n            // POST /api/verify_email,\r\n            // expected data {email: $scope.data.email, code: $scope.data.code}\r\n            $httpBackend.whenPOST(child.fakeUrl + child.api).respond(function(method, url, data, headers, params) {\r\n                console.log('pipMocks.Users22222', data, headers, params);\r\n\r\n                return [200, {}, {}];\r\n            });             \r\n        }\r\n\r\n        return child;\r\n    }]); \r\n\r\n    thisModule.factory('MockedRecoverPasswordResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/recover_password';\r\n      \r\n        child.register = function() {\r\n\r\n            // POST /api/recover_password,\r\n            // expected data {email: $scope.data.email}\r\n            $httpBackend.whenPOST(child.fakeUrl + child.api).respond(function(method, url, data, headers, params) {\r\n                console.log('pipMocks.Users22222', data, headers, params);\r\n\r\n                return [200, {}, {}];\r\n            });             \r\n        }\r\n\r\n        return child;\r\n    }]); \r\n\r\n    thisModule.factory('MockedResetPasswordResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/reset_password';\r\n\r\n        child.register = function() {\r\n\r\n            // POST /api/reset_password,\r\n            // expected data {email: $scope.data.email,code: $scope.data.code,password: $scope.data.password}\r\n            $httpBackend.whenPOST(child.fakeUrl + child.api).respond(function(method, url, data, headers, params) {\r\n                console.log('pipMocks.Users22222', data, headers, params);\r\n\r\n                return [200, {}, {}];\r\n            });             \r\n        }\r\n\r\n        return child;\r\n    }]);   \r\n\r\n    thisModule.factory('MockedChangePasswordResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/change_password';\r\n\r\n        child.register = function() {\r\n\r\n            // POST /api/change_password, \r\n            // todo: expected ??\r\n            $httpBackend.whenPOST(child.fakeUrl + child.api).respond(function(method, url, data, headers, params) {\r\n                console.log('pipMocks.Users22222', data, headers, params);\r\n\r\n                return [200, {}, {}];\r\n            });             \r\n        }\r\n\r\n        return child;\r\n    }]);  \r\n\r\n})();\r\n \r\n","/**\r\n * @file MockedFeedbacksResource\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * \r\n * Mocked:\r\n * /api/feedbacks/:id\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocked.Feedbacks', ['ngMockE2E', 'ngResource']);\r\n\r\n    thisModule.factory('MockedFeedbacksResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/feedbacks';\r\n\r\n        child.register = function() {\r\n\r\n                   \r\n        }\r\n\r\n        return child;\r\n    }]);\r\n\r\n})();","/**\r\n * @file MockedGuidesResource\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * \r\n * Mocked:\r\n * /api/guides/:id\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocked.Guides', ['ngMockE2E', 'ngResource']);\r\n\r\n    thisModule.factory('MockedGuidesResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/guides';\r\n\r\n        child.register = function() {\r\n\r\n                   \r\n        }\r\n\r\n        return child;\r\n    }]);\r\n\r\n})();","/**\r\n * @file MockedImagesResource\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * \r\n * Mocked:\r\n * /api/image_sets/:id\r\n * /api/images/search\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocked.Images', ['ngMockE2E', 'ngResource']);\r\n\r\n    thisModule.factory('MockedImagesResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/image_sets';\r\n\r\n        child.register = function() {\r\n\r\n                   \r\n        }\r\n\r\n        return child;\r\n    }]);\r\n\r\n})();","/**\r\n * @file MockedPartyResource\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * \r\n * Mocked:\r\n * /api/parties/:id\r\n * /api/parties/:party_id/settings\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocked.Party', ['ngMockE2E', 'ngResource']);\r\n\r\n    thisModule.factory('MockedPartyResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/parties/';\r\n\r\n        child.register = function() {\r\n\r\n                   \r\n        }\r\n\r\n        return child;\r\n    }]);\r\n\r\n})();","/**\r\n * @file pipMocked\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n\r\n/* API list\r\n\r\n+ /api/users/current\r\n+ /api/users/:id\r\n\r\n+ /api/users/:party_id/sessions/:id\r\n\r\n/api/parties/:id\r\n/api/parties/:party_id/settings\r\n\r\n/api/signup_validate\r\n/api/verify_email\r\n/api/users/:party_id/resend_email_verification\r\n/api/change_password\r\n/api/reset_password\r\n/api/recover_password\r\n/api/signup\r\n/api/signout\r\n/api/signin\r\n\r\n/api/image_sets/:id\r\n/api/images/search\r\n\r\nimages:\r\nget serverurl + /api/parties/ + partyId + \"/files/\" + imageId\r\n    serverUrl + '/api/parties/' + partyId + '/files\r\n\r\n    \r\n    // document\r\n$upload.http({\r\nurl: addItemUrl(item),\r\nheaders: { 'Content-Type': file.type },\r\ndata: e.target.result\r\n})    \r\n\r\nserverUrl + '/api/parties/' + partyId + '/files?name='\r\n\r\n$http['delete'](getItemIdUrl(item))\r\n\r\n// image_sets\r\n$http['post'](url)\r\n\r\n$upload.http({\r\nurl: FILE_URL + '?name=' + file.name,\r\nheaders: { 'Content-Type': file.type },\r\ndata: e.target.result\r\n\r\n\r\n/api/servers/activities/:id\r\n/api/guides/:id\r\n/api/tips/:id\r\n/api/feedbacks/:id\r\n/api/announcements/:id\r\n\r\n})\r\n\r\n\r\navatar\r\nget serverUrl + '/api/parties/' + partyId + '/' + entityTypes[type] + '/' + id + '/avatar\r\nget serverUrl + '/api/parties/' + partyId + '/avatar\r\n\r\n*/\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocked', ['ngMockE2E', 'ngResource']);\r\n\r\n    thisModule.factory('pipMockedResource', function () {\r\n        var mocks = [];\r\n\r\n\r\n        return {\r\n            addMocks: addMocks,\r\n            registerStandardResources: registerStandardResources\r\n        };\r\n\r\n        function registerStandardResources() {\r\n            for (var i = 0; i < mocks.length; i++) {\r\n                var obj = mocks[i];\r\n                obj.register();\r\n            }\r\n        }\r\n\r\n        function registerSampleResources() {\r\n\r\n        }\r\n\r\n        function addMocks(extension) {\r\n            console.log('addMocks', extension);\r\n            if (extension && angular.isObject(extension)) {\r\n                mocks.push(extension);\r\n            }\r\n        };\r\n\r\n    });\r\n\r\n    thisModule.factory('MockedResource', ['$httpBackend', '$log', function ($httpBackend, $log) {\r\n            this.api = '';\r\n            this.fakeUrl = 'http://alpha.pipservices.net';\r\n\r\n            this.regEsc = function (str) {\r\n                    //Escape string to be able to use it in a regular expression\r\n                    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\r\n            }\r\n\r\n            this.IdRegExp = /[a-zA-Z0-9]{24}/.toString().slice(1, -1);\r\n            this.QueryRegExp = /[\\d\\w-_\\.%\\s]*$/.toString().slice(1, -1);\r\n            this.EndStringRegExp = /$/.toString().slice(1, -1);\r\n\r\n            this.register = function() {}\r\n\r\n        return this;\r\n    }]);\r\n\r\n    thisModule.factory('TruePathResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n            var child = Object.create(MockedResource);\r\n\r\n            child.register = function() {\r\n                $httpBackend.whenGET(/.*/).passThrough();           \r\n            }\r\n            return child;\r\n    }]);\r\n\r\n})();\r\n \r\n\r\n\r\n// /api/users/:party_id/resend_email_verification\r\n// /.*\\/friends\\/(\\w+)/\r\n\r\n// $httpBackend.whenGET(/\\/contacts\\/(\\d+)/, undefined, ['id']).respond(function(method, url, data, headers, params) {\r\n//   var contact = findContactById(params.id);\r\n\r\n//   if (contact == null) {\r\n//     return [404, undefined, {}];\r\n//   }\r\n\r\n//   return [200, contact, {}];\r\n// });\r\n\r\n// $httpBackend.whenPUT(/\\/contacts\\/(\\d+)/, undefined, undefined, ['id']).respond(function(method, url, data, headers, params) {\r\n//   var contact = findContactById(params.id),\r\n//       parsedData = angular.fromJson(data);\r\n\r\n//   if (contact == null) {\r\n//     return [404, undefined, {}];\r\n//   }\r\n\r\n//   angular.extend(contact, parsedData);\r\n\r\n//   return [200, contact, {}];\r\n// });\r\n\r\n// // Delete; remove existing contact.\r\n// $httpBackend.whenDELETE(/\\/contacts\\/(\\d+)/, undefined, ['id']).respond(function(method, url, data, headers, params) {\r\n//   var contact = findContactById(params.id);\r\n\r\n//   if (contact == null) {\r\n//     return [404, undefined, {}];\r\n//   }\r\n\r\n//   // Replace contacts array with filtered results, removing deleted contact.\r\n//   contacts.splice(contacts.indexOf(contact), 1);\r\n\r\n//   return [200, undefined, {}];\r\n// });\r\n\r\n\r\n\r\n\r\n// ----\r\n\r\n// //GET tag/\r\n// $httpBackend.whenGET(collectionUrl).respond(function(method, url, data, headers) {\r\n//     $log.log('Intercepted GET to tag', data);\r\n//     return [200, TagRepo.data, {/*headers*/}];\r\n// });\r\n\r\n// //GET tag/<id>\r\n// $httpBackend.whenGET( new RegExp(regexEscape(collectionUrl + '/') + IdRegExp ) ).respond(function(method, url, data, headers) {\r\n//     $log.log('Intercepted GET to tag/id');\r\n//     var id = url.match( new RegExp(IdRegExp) )[0];\r\n    \r\n//     if (!TagRepo.index[id]) {\r\n//         return [404, {} , {/*headers*/}];\r\n//     }\r\n\r\n//     return [200, TagRepo.index[id], {/*headers*/}];\r\n// });\r\n\r\n\r\n// -------\r\n\r\n //get all stores\r\n        // var storeUrl = \"/api/stores\";\r\n        // $httpBackend.whenGET(storeUrl).respond(stores);\r\n\r\n        // //get single store\r\n        // var singleStoreUrl = new RegExp(storeUrl + \"/[0-9][0-9]*\", '');\r\n        // $httpBackend.whenGET(singleStoreUrl)\r\n\r\n// -------\r\n\r\n// var regexGetTicket = new RegExp('/ticket/([0-9]+)');\r\n// $httpBackend.whenGET({\r\n//     test: function(url) {\r\n//         return regexGetTicket.test(url);\r\n//     }\r\n// })        \r\n\r\n\r\n// --------\r\n// To create a pattern from a string url, with optional query-string, you could use this:\r\n\r\n// var targetUrl = \"/somelink\";\r\n// var pattern = new RegExp(\r\n//     \"^\" +\r\n//     targetUrl.replace(/[-[\\]{}()*+?.\\\\^$|]/g, \"\\\\$&\") + /* escape special chars */\r\n//     \"(?:\\\\?.*)?$\");\r\n// $httpBackend.when('GET', pattern).respond(function(method, url, data) {\r\n//   var queryMatch = /^[^#]*\\?([^#]*)/.exec(url);\r\n//   var query = queryMatch ? queryMatch[1] : \"\";\r\n//   // url = \"/somelink?abc=123\" -> query = \"abc=123\"\r\n// });","/**\r\n * @file MockedServersActivitiesResource\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * \r\n * Mocked:\r\n * /api/servers/activities/:id\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocked.ServersActivities', ['ngMockE2E', 'ngResource']);\r\n\r\n    thisModule.factory('MockedServersActivitiesResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/servers/activities';\r\n\r\n        child.register = function() {\r\n\r\n                   \r\n        }\r\n\r\n        return child;\r\n    }]);\r\n\r\n})();\r\n ","/**\r\n * @file MockedTipsResource\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * \r\n * Mocked:\r\n * /api/tips/:id\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocked.Tips', ['ngMockE2E', 'ngResource']);\r\n\r\n    thisModule.factory('MockedTipsResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/tips';\r\n\r\n        child.register = function() {\r\n\r\n                   \r\n        }\r\n\r\n        return child;\r\n    }]);\r\n\r\n})();","/**\r\n * @file pipMockedUsers\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * \r\n * Mocked:\r\n * GET /api/users/current\r\n * GET /api/users\r\n * POST /api/users\r\n * GET /api/users/:id\r\n * PUT /api/users/:id\r\n * DELETE /api/users/:id\r\n * \r\n * GET /api/users/:party_id/sessions\r\n * DELETE /api/users/:party_id/sessions/:id\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocked.Users', ['ngMockE2E', 'ngResource']);\r\n\r\n    thisModule.factory('MockedCurrentUserResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/users/current';\r\n\r\n        child.register = function() {\r\n\r\n            // GET /api/users/current\r\n            $httpBackend.whenGET(child.fakeUrl + child.api).respond(function(method, url, data, headers) {\r\n               console.log('MockedCurrentUserResource whenGET current', data, headers);\r\n\r\n                 return [200, {}, {}];\r\n            });\r\n                \r\n        }\r\n\r\n        return child;\r\n    }]);\r\n\r\n    thisModule.factory('MockedUsersResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/users';\r\n\r\n        child.register = function() {\r\n\r\n            // GET /api/users\r\n            $httpBackend.whenGET(child.fakeUrl + child.api).respond(function(method, url, data, headers) {\r\n               console.log('MockedUsersResource whenGET collection', data, headers);\r\n\r\n                 return [200, {}, {}];\r\n            });\r\n\r\n            // POST /api/users\r\n            $httpBackend.whenPOST(child.fakeUrl + child.api).respond(function(method, url, data, headers, params) {\r\n                console.log('MockedUsersResource whenPOST', data, headers, params);\r\n\r\n                return [200, {}, {}];\r\n            }); \r\n\r\n            // GET /api/users/:id\r\n            $httpBackend.whenGET(new RegExp(child.regEsc(child.fakeUrl + child.api + '/') + child.IdRegExp + child.EndStringRegExp)).respond(function(method, url, data, headers) {\r\n               console.log('MockedUsersResource whenGET user', data, headers);\r\n\r\n                 return [200, {}, {}];\r\n            });\r\n\r\n            // PUT /api/users/:id\r\n            $httpBackend.whenPUT(new RegExp(child.regEsc(child.fakeUrl + child.api + '/') + child.IdRegExp + child.EndStringRegExp)).respond(function(method, url, data, headers) {\r\n                console.log('MockedUsersResource whenPUT', data, headers);\r\n\r\n                return [200, {}, {}];\r\n            });   \r\n\r\n            // DELETE /api/users/:id\r\n            $httpBackend.whenDELETE(new RegExp(child.regEsc(child.fakeUrl + child.api + '/') + child.IdRegExp + child.EndStringRegExp)).respond(function(method, url, data, headers) {\r\n                console.log('MockedUsersResource whenPUT', data, headers);\r\n\r\n                return [200, {}, {}];\r\n            });                       \r\n        }\r\n\r\n        return child;\r\n    }]);\r\n\r\n    thisModule.factory('MockedUserSessionsResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        // /api/users/:party_id/sessions/:id\r\n        child.api = '/api/users/:party_id/sessions/:id';\r\n\r\n        child.register = function() {\r\n            // GET /api/users/:party_id/sessions\r\n            $httpBackend.whenGET(new RegExp(child.regEsc(child.fakeUrl + '/api/users/') + child.IdRegExp + child.regEsc('/sessions')))\r\n            .respond(function(method, url, data, headers) {\r\n               console.log('MockedUserSessionsResource whenGET current', data, headers);\r\n// expected \r\n// [{\r\n// \"address\": \"109.254.67.37\"\r\n// \"client\": \"chrome\"\r\n// \"platform\": \"windows 6.3\"\r\n// \"last_req\": \"2016-05-17T16:12:10.525Z\"\r\n// \"opened\": \"2016-05-16T12:11:33.039Z\"\r\n// \"id\": \"5739b8f5deca605c33c842cc\"\r\n// }]\r\n                 return [200, {}, {}];\r\n            });\r\n\r\n            // DELETE  /api/users/:party_id/sessions/:id\r\n            $httpBackend.whenDELETE(new RegExp(child.regEsc(child.fakeUrl + '/api/users/') + child.IdRegExp + child.regEsc('/sessions/') + child.IdRegExp + child.EndStringRegExp))\r\n            .respond(function(method, url, data, headers) {\r\n                console.log('MockedUserSessionsResource whenDELETE', data, headers);\r\n// expected \r\n// OK\r\n                return [200, {}, {}];\r\n            });      \r\n        }\r\n\r\n        return child;\r\n    }]);    \r\n\r\n})();\r\n \r\n","/*\r\n *\r\n * (с) Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function (_) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipFakeDataModel.Users', []);\r\n\r\n    thisModule.service('pipFakeDataModelUsers', ['pipBasicGeneratorServices', 'pipDataGeneratorUserParty', function (pipBasicGeneratorServices, pipDataGeneratorUserParty) {\r\n\r\n        var usersCollection = [];\r\n\r\n        return {\r\n            dataGenerate: dataGenerate,\r\n            getData: getData,\r\n            setData: setData,\r\n            findOne: findOne,\r\n            findAll: findAll,\r\n            findMany: findMany,\r\n            addOne: addOne,\r\n            updateOne: updateOne,\r\n            deleteOne: deleteOne\r\n        };\r\n\r\n        function dataGenerate (n) {\r\n            var newUser, i,\r\n                length = n > 0 ? n : 10;\r\n\r\n            usersCollection = [];\r\n\r\n            for (i = 0; i < length; i++) {\r\n                newUser = pipDataGeneratorUserParty.getOneUser();\r\n                usersCollection.push(newUser);\r\n            }\r\n\r\n            return usersCollection;\r\n        }\r\n        \r\n        function getData () {\r\n            return usersCollection;\r\n        }\r\n        \r\n        function setData (data) {\r\n            usersCollection = data;\r\n        }\r\n    \r\n        function findOne (params) {\r\n            // find the user that matches that params\r\n            var user = _.find(usersCollection, params) || [];\r\n\r\n            return user[0] || null;\r\n        }\r\n    \r\n        function findAll () {\r\n            return getData();\r\n        }\r\n        \r\n        function findMany(params) {\r\n            var users = _.find(usersCollection, params) || [];\r\n\r\n            return users;\r\n        }\r\n        \r\n        function addOne(data) {\r\n            // must calculate a unique ID to add the new data\r\n            var newUser;\r\n\r\n            newUser = pipDataGeneratorUserParty.getOneUser(data);\r\n            usersCollection.push(newUser);\r\n\r\n            return newUser;\r\n        }\r\n        \r\n        function updateOne(userId, user) {\r\n            // find the user that matches that id\r\n            var users = getData(),\r\n                match = null,\r\n                i;\r\n\r\n            for (i = 0; i < users.length; i++) {\r\n                if(users[i].id == userId) {\r\n                    match = users[i];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if(!angular.isObject(match)) {\r\n                return {};\r\n            }\r\n\r\n            angular.extend(match, user);\r\n\r\n            return match;\r\n        }\r\n        \r\n        function deleteOne (userId) {\r\n            // find the user that matches that id\r\n            var users = getData(),\r\n                match = false, \r\n                i;\r\n\r\n            for (i = 0; i < users.length; i++) {\r\n                if(users[i].id == userId) {\r\n                    match = true;\r\n                    users.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return match;\r\n        }\r\n    }]);\r\n\r\n})(window._);\r\n","/**\r\n * @file Service provides mocked user's party\r\n * @copyright Digital Living Software Corp. 2014-2015\r\n */\r\n\r\n(function (_, chance) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDataGenerator.UserParty', []);\r\n\r\n    thisModule.service('pipDataGeneratorUserParty', ['pipBasicGeneratorServices', function (pipBasicGeneratorServices) {\r\n\r\n        return {\r\n            getOneUser: getOneUser,\r\n            getParty: getParty,\r\n            getConnection: getConnection,\r\n            getPartyAccess: getPartyAccess\r\n        };\r\n\r\n        function getSession(propertyValues) {\r\n            var date = new Date(chance.timestamp()),\r\n                session = {\r\n                    address: chance.ip(),\r\n                    client: pipBasicGeneratorServices.getOne(['chrome', 'mozilla', 'explorer']),\r\n                    platform: pipBasicGeneratorServices.getOne(['windows 8', 'windows 7', 'linux']),\r\n                    last_req: date.toJSON(),\r\n                    opened: date.toJSON(),\r\n                    id: pipBasicGeneratorServices.getObjectId()\r\n                };\r\n\r\n            if (propertyValues) {\r\n                session = _.assign(session, propertyValues);\r\n            }\r\n\r\n            return session;\r\n        }\r\n\r\n        // get user for testing\r\n        function getOneUser(propertyValues) {\r\n            var date1 = chance.timestamp(),\r\n                date2 = chance.timestamp(),\r\n\r\n                user = {\r\n                    pwd_last_fail: null,\r\n                    pwd_fail_count: 0,\r\n                    name: pipBasicGeneratorServices.getName(),\r\n                    email: chance.email(),\r\n                    language: pipBasicGeneratorServices.getOne(['en', 'ru', 'fr']),\r\n                    paid: chance.bool({likelihood: 30}),\r\n                    admin: false,\r\n                    party_access: getPartyAccess(),\r\n                    sessions: getSession(),\r\n                    signin: date1 > date2 ? new Date(date1).toJSON() : new Date(date2).toJSON(),\r\n                    signup: date1 > date2 ? new Date(date2).toJSON() : new Date(date1).toJSON(),\r\n                    active: true,\r\n                    lock: false,\r\n                    email_ver: false,\r\n                    id: pipBasicGeneratorServices.getObjectId(),\r\n                    last_session_id: pipBasicGeneratorServices.getObjectId()\r\n                };\r\n\r\n            if (propertyValues) {\r\n                user = _.assign(user, propertyValues);\r\n            }\r\n\r\n            return user;\r\n        }\r\n\r\n        function getPartyAccess(n, propertyValues) {\r\n            var result = [],\r\n                length = n || Math.floor(Math.random() * 10),\r\n                i,\r\n                p,\r\n                isContributor;\r\n\r\n            for (i = 0; i < length; i++) {\r\n                isContributor = chance.bool({likelihood: 30});\r\n\r\n                p = {\r\n                    share_level: 0,\r\n                    type: 'partner',\r\n                    party_name: chance.first() + ' ' + chance.name(),\r\n                    party_id: pipBasicGeneratorServices.getObjectId(),\r\n                    contributor: isContributor,\r\n                    manager: isContributor ? chance.bool({likelihood: 30}) : false,\r\n                    id: pipBasicGeneratorServices.getObjectId()\r\n                };\r\n\r\n                if (propertyValues) {\r\n                    p = _.assign(p, propertyValues);\r\n                }\r\n\r\n                result.push(p);\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        function getParty(propertyValues) {\r\n            var date1 = chance.timestamp(),\r\n                date2 = chance.timestamp(),\r\n                party = {\r\n                    name: chance.first() + ' ' + chance.name(),\r\n                    email: chance.email(),\r\n                    type: 'person', // todo ??\r\n                    gender: chance.gender().toLowerCase(),\r\n                    loc_name: chance.address(),\r\n                    loc_pos: {\r\n                        type: 'Point',\r\n                        coordinates: [\r\n                            chance.floating({min: -120, max: 120}),\r\n                            chance.floating({min: -120, max: 120})\r\n                        ]\r\n                    },\r\n                    join: 'approve', // todo ??\r\n                    updated: date1 > date2 ? new Date(date1).toJSON() : new Date(date2).toJSON(),\r\n                    created: date1 > date2 ? new Date(date2).toJSON() : new Date(date1).toJSON(),\r\n                    id: pipBasicGeneratorServices.getObjectId()\r\n                };\r\n\r\n            if (propertyValues) {\r\n                party = _.assign(party, propertyValues);\r\n            }\r\n\r\n            return party;\r\n        }\r\n\r\n        function getConnection(party, propertyValues) {\r\n            if (!party || !party.id || !party.name) {\r\n                return null;\r\n            }\r\n\r\n            var isContributor = chance.bool({likelihood: 30}),\r\n                con = {\r\n                    party_id: party.id,\r\n                    party_type: party.type,\r\n                    party_name: party.name,\r\n                    to_party_id: pipBasicGeneratorServices.getObjectId(),\r\n                    to_party_name: chance.first() + ' ' + chance.name(),\r\n                    to_party_type: 'person', // todo\r\n                    type: 'partner', // todo\r\n                    share_level: chance.integer({min: 0, max: 4}),\r\n                    accept: 'joined', // todo\r\n                    group_ids: [],\r\n                    contributor: isContributor,\r\n                    manager: isContributor ? chance.bool({likelihood: 30}) : false,\r\n                    snoozed: false,\r\n                    created: new Date(chance.timestamp()).toJSON(),\r\n                    id: pipBasicGeneratorServices.getObjectId()\r\n                };\r\n\r\n            if (propertyValues) {\r\n                con = _.assign(con, propertyValues);\r\n            }\r\n\r\n            return con;\r\n        }\r\n\r\n    }]);\r\n\r\n})(window._, window.chance);\r\n"],"sourceRoot":"/source/"}