{"version":3,"sources":["pip_webui_tests.js","data_models/pip_entry_data_model.js","data_models/pip_fake_data_model.js","data_models/pip_files_data_model.js","data_models/pip_settings_data_model.js","data_models/pip_users_data_model.js","pip_mock/pip_mocks.js","pip_mock/pip_mock_files.js","pip_mock/pip_mock_settings.js","pip_mock/pip_mock_users.js","pip_mock/pip_mok_entry.js","old/account.js","old/content.js","old/data_set.test.js","old/entity.js","old/general.js","old/tests.js","old/user_party.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClfile":"pip-webui-test.js","sourcesContent":["/**\r\n * @file Registration of WebUI tests\r\n * @copyright Digital Living Software Corp. 2014-2015\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipWebuiTests', [\r\n        'pipTests',\r\n        'pipFakeDataModel',\r\n        'pipMocks'\r\n    ]);\r\n\r\n})();\r\n","/*\r\n *\r\n * (с) Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function (_) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipFakeDataModel.Entry', []);\r\n\r\n    thisModule.service('pipFakeDataModelEntry', ['pipTestGeneral', function (pipTestGeneral) {\r\n\r\n        this.data = [\r\n            {\r\n\r\n            }     \r\n        ];\r\n        \r\n\r\n    }]);\r\n\r\n})(window._);\r\n","/**\r\n * @file Registration of Fake Data Model\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipFakeDataModel', [\r\n        'pipFakeDataModel.Users',\r\n        'pipFakeDataModel.Files',\r\n        'pipFakeDataModel.Settings',\r\n        'pipFakeDataModel.Entry'\r\n    ]);\r\n\r\n})();\r\n","/*\r\n *\r\n * (с) Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function (_) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipFakeDataModel.Files', []);\r\n\r\n    thisModule.service('pipFakeDataModelFiles', ['pipTestGeneral', function (pipTestGeneral) {\r\n\r\n        this.data = [\r\n            {\r\n\r\n            }     \r\n        ];\r\n        \r\n\r\n    }]);\r\n\r\n})(window._);\r\n","/*\r\n *\r\n * (с) Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function (_) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipFakeDataModel.Settings', []);\r\n\r\n    thisModule.service('pipFakeDataModelSettings', ['pipTestGeneral', function (pipTestGeneral) {\r\n\r\n        this.data = [\r\n            {\r\n\r\n            }     \r\n        ];\r\n        \r\n\r\n    }]);\r\n\r\n})(window._);\r\n","/*\r\n *\r\n * (с) Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function (_) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipFakeDataModel.Users', []);\r\n\r\n    thisModule.service('pipFakeDataModelUsers', ['pipTestGeneral', function (pipTestGeneral) {\r\n\r\n        this.data = [\r\n            {\r\n                \"name\": \"Миньошка\",\r\n                \"email\": \"1@1.com\",\r\n                \"language\": \"en\",\r\n                \"pwd_fail_count\": 0,\r\n                \"pwd_last_fail\": null,\r\n                \"theme\": \"orange\",\r\n                \"email_config\": {\r\n                    \"engage\": true,\r\n                    \"due\": true,\r\n                    \"comment\": true,\r\n                    \"join\": true,\r\n                    \"follow\": false,\r\n                    \"response\": true,\r\n                    \"invite\": false,\r\n                    \"message\": false\r\n                },\r\n                \"paid\": false,\r\n                \"admin\": true,\r\n                \"party_access\": [\r\n                    {\r\n                        \"share_level\": 3,\r\n                        \"type\": \"member\",\r\n                        \"party_name\": \"киця1\",\r\n                        \"party_id\": \"56b0a214e8540ddb54705fd4\",\r\n                        \"contributor\": true,\r\n                        \"manager\": true,\r\n                        \"id\": \"56b0a215e8540ddb54705fd8\"\r\n                    },\r\n                    {\r\n                        \"share_level\": 0,\r\n                        \"type\": \"partner\",\r\n                        \"party_name\": \"kitty\",\r\n                        \"party_id\": \"56740d3886153bef572804f5\",\r\n                        \"contributor\": false,\r\n                        \"manager\": false,\r\n                        \"id\": \"56b36e322dd75a9663fc79c8\"\r\n                    }\r\n                ],\r\n                \"sessions\": [\r\n                    {\r\n                        \"address\": \"176.37.183.138\",\r\n                        \"client\": \"chrome\",\r\n                        \"platform\": \"mobile\",\r\n                        \"last_req\": \"2016-07-27T13:52:52.041Z\",\r\n                        \"opened\": \"2016-07-27T11:02:23.445Z\",\r\n                        \"id\": \"579894bf58270790720df9ee\"\r\n                    }\r\n                ],\r\n                \"signin\": \"2016-07-27T13:53:03.049Z\",\r\n                \"signup\": \"2015-12-02T15:49:03.466Z\",\r\n                \"active\": true,\r\n                \"lock\": false,\r\n                \"email_ver\": false,\r\n                \"id\": \"565f12ef8ff2161b1dfeedbf\",\r\n                \"last_session_id\": \"579894bf58270790720df9ee\"\r\n            }    \r\n        ];\r\n        \r\n        this.getData = function() {\r\n            return this.data;\r\n        };\r\n        \r\n        this.setData = function(data) {\r\n            this.data = data;\r\n        };\r\n    \r\n        this.findOne = function(userId) {\r\n            // find the user that matches that id\r\n            var user = this.data[0];\r\n\r\n            return user;\r\n        };\r\n    \r\n        this.findAll = function() {\r\n            return this.getData();\r\n        };\r\n        \r\n        this.findMany = function(options) {\r\n            var users;\r\n\r\n            return users;       \r\n        };\r\n        \r\n        this.addOne = function(newUser) {\r\n            // must calculate a unique ID to add the new data\r\n            var newId = this.newId();\r\n            newUser.id = newId;\r\n            this.data.push(newUser);\r\n\r\n            return newUser;\r\n        };\r\n        \r\n        // return an id to insert a new data item at\r\n        this.newId = function() {\r\n            var newId = pipTestGeneral.getObjectId();\r\n\r\n            return newId;\r\n        };\r\n        \r\n        this.updateOne = function(userId, user) {\r\n            // find the user that matches that id\r\n            var users = this.getData(),\r\n                match = null,\r\n                i;\r\n\r\n            for (i = 0; i < users.length; i++) {\r\n                if(users[i].id == userId) {\r\n                    match = users[i];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if(!angular.isObject(match)) {\r\n                return {};\r\n            }\r\n\r\n            angular.extend(match, user);\r\n\r\n            return match;\r\n        };\r\n        \r\n        this.deleteOne = function(userId) {\r\n            // find the user that matches that id\r\n            var users = this.getData(),\r\n                match = false, \r\n                i;\r\n\r\n            for (i = 0; i < users.length; i++) {\r\n                if(users[i].id == userId) {\r\n                    match = true;\r\n                    users.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return match;\r\n        };\r\n    }]);\r\n\r\n})(window._);\r\n","/**\r\n * @file Mocks for REST API\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* API list\r\n\r\n/api/users/current\r\n/api/users/:id\r\n/api/users/:party_id/sessions/:id\r\n/api/parties/:id\r\n\r\n\r\n/api/parties/:party_id/settings\r\n\r\n/api/image_sets/:id\r\n/api/images/search\r\n\r\n/api/guides/:id\r\n/api/tips/:id\r\n/api/feedbacks/:id\r\n/api/announcements/:id\r\n\r\n/api/signup_validate\r\n/api/verify_email\r\n/api/users/:party_id/resend_email_verification\r\n/api/change_password\r\n/api/reset_password\r\n/api/recover_password\r\n/api/signup\r\n/api/signout\r\n/api/signin\r\n*/\r\n\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipMocks', [\r\n        'pipMocks.Users',\r\n        'pipMocks.Files',\r\n        'pipMocks.Settings',\r\n        'pipMocks.Entry'\r\n    ]);\r\n\r\n})();\r\n","/*\r\n * Mocks for Files REST API\r\n * (с) Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocks.Files', []);\r\n\r\n    thisModule.config(function() {\r\n\r\n    });\r\n\r\n    thisModule.run(\r\n        ['$httpBackend', function($httpBackend) {\r\n        \r\n          \r\n        }]\r\n    );\r\n\r\n})();\r\n","/*\r\n * Mocks for Settings REST API\r\n * (с) Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocks.Settings', []);\r\n\r\n    thisModule.config(function() {\r\n\r\n    });\r\n\r\n    thisModule.run(\r\n        ['$httpBackend', function($httpBackend) {\r\n        \r\n          \r\n        }]\r\n    );\r\n\r\n})();\r\n","/*\r\n * Mocks for Users REST API\r\n * (с) Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocks.Users', []);\r\n\r\n    thisModule.config(function() {\r\n\r\n    });\r\n\r\n    thisModule.run(\r\n        ['$httpBackend', 'pipFakeDataModelUsers', function($httpBackend, pipFakeDataModelUsers) {\r\n        \r\n          \r\n        }]\r\n    );\r\n\r\n})();\r\n","/*\r\n * Mocks for Entry REST API\r\n * (с) Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/*\r\n/api/signin\r\n/api/signup\r\n/api/signout\r\n/api/signup_validate\r\n/api/verify_email\r\n/api/users/:party_id/resend_email_verification\r\n/api/change_password\r\n/api/reset_password\r\n/api/recover_password\r\n*/\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocks.Entry', ['ngMockE2E', 'ngResource']);\r\n\r\n    // thisModule.config(function($provide) {\r\n    //     $provide.decorator('$httpBackend', angular.mock.e2e.$httpBackendDecorator);\r\n    // });\r\n\r\n    thisModule.run(\r\n        ['$httpBackend', 'pipFakeDataModelUsers', function($httpBackend, pipFakeDataModelUsers) {\r\n\r\n            // config this\r\n            var serverUrl = 'http://alpha.pipservices.net';\r\n        \r\n            $httpBackend.whenGET(serverUrl + '/api/signin').respond(function(method, url, data) {\r\n                var user = pipFakeDataModelUsers.findOne('565f12ef8ff2161b1dfeedbf')\r\n\r\n                    console.log('signin get', method, url, data);\r\n                    console.log('signin return', user);\r\n                return [200, user, user];\r\n            });\r\n       \r\n            $httpBackend.whenPOST(serverUrl + '/api/signin').respond(function(method, url, data, headers) {\r\n                var user = pipFakeDataModelUsers.findOne('565f12ef8ff2161b1dfeedbf')\r\n\r\n                    console.log('signin post', method, url, data);\r\n                    console.log('signin return', user);\r\n                return [200, user, user];\r\n            });\r\n\r\n            $httpBackend.whenGET(/samples\\//).passThrough();\r\n\r\n            // // do real request\r\n            // $httpBackend.whenJSONP().passThrough();\r\n        }]\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Provides a service to work with mocked user\r\n * @copyright Digital Living Software Corp. 2014-2015\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTest.Account', ['pipTest.DataSet']);\r\n\r\n    thisModule.service('pipTestAccount', ['pipTestDataSet', function (pipTestDataSet) {\r\n\r\n        return {\r\n            getServerUrl: getServerUrl,\r\n            getSamplerAccount: getSamplerAccount,\r\n            getTesterAccount: getTesterAccount\r\n        };\r\n\r\n        // Returns server url\r\n        function getServerUrl() {\r\n            return pipTestDataSet.SERVER_URL;\r\n        }\r\n\r\n        // Returns account, users and parties\r\n        function getSamplerAccount() {\r\n            return pipTestDataSet.SAMPLER_ACCOUNT;\r\n        }\r\n\r\n        function getTesterAccount() {\r\n            return pipTestDataSet.TESTER_ACCOUNT;\r\n        }\r\n    }]);\r\n\r\n})();\r\n","/**\r\n * @file Mock data for checklist\r\n * @copyright Digital Living Software Corp. 2014-2015\r\n */\r\n\r\n/* global chance */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTest.Content', ['pipTest.DataSet']);\r\n\r\n    thisModule.service('pipTestContent', function () {\r\n\r\n        return {\r\n            getCheckList: getCheckList\r\n        };\r\n\r\n        // Returns entity\r\n        function getCheckList(options) {\r\n\r\n            var size = 1 + Math.floor(Math.random() * 10),\r\n                onlyCheck,\r\n                onlyUnCheck,\r\n                optionTextType, // {word, sentence, paragraph}\r\n                optionLength,\r\n                checklistContent = [],\r\n                i;\r\n\r\n            if (options) {\r\n                size = options.size ? options.size : size;\r\n                onlyCheck = options.onlyCheck ? options.onlyCheck : false;\r\n                onlyUnCheck = options.onlyUnCheck ? options.onlyUnCheck : false;\r\n                optionTextType = options.optionTextType ? options.optionTextType : null;\r\n                optionLength = options.optionLength ? options.optionLength : null;\r\n            }\r\n\r\n            for (i = 0; i < size; i++) {\r\n                checklistContent.push({\r\n                    text: getText(optionTextType, optionLength),\r\n                    checked: getChecked(onlyCheck, onlyUnCheck)\r\n                });\r\n            }\r\n\r\n            return checklistContent;\r\n\r\n            // helpful functions\r\n            function getText(optionTextType, optionLength) {\r\n                var text;\r\n\r\n                switch (optionTextType) {\r\n                    case 'word':\r\n                        text = chance.word({ length: optionLength });\r\n                        break;\r\n                    case 'sentence':\r\n                        text = chance.sentence({ words: optionLength });\r\n                        break;\r\n                    case 'paragraph':\r\n                        text = chance.paragraph({ sentences: optionLength });\r\n                        break;\r\n                    default:\r\n                        text = chance.sentence({words: optionLength});\r\n                }\r\n\r\n                return text;\r\n            }\r\n\r\n            function getChecked(onlyCheck, onlyUnCheck) {\r\n                return onlyCheck || onlyUnCheck || chance.bool();\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n})();\r\n","/**\r\n * @file Service provides mocked data\r\n * @copyright Digital Living Software Corp. 2014-2015\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTest.DataSet', []);\r\n\r\n    thisModule.service('pipTestDataSet', function () {\r\n\r\n        var ABCD = 'abcdefghijklmnopqrstuvwxyz',\r\n            ABCD_CAPITALIZE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\r\n            DIGIT = '0123456789',\r\n            SIGN = ' .,;:-!?',\r\n\r\n            SERVER_URL = 'http://alpha.pipservices.net',\r\n\r\n            // define users\r\n            SAMPLER_ACCOUNT = {\r\n                name: 'Sampler User',\r\n                email: 'sampler@digitallivingsoftware.com',\r\n                password: 'test123',\r\n                language: 'en',\r\n                theme: ''\r\n            },\r\n            TESTER_ACCOUNT = {\r\n                name: 'Empty User',\r\n                email: 'emptyUser@test.ru',\r\n                password: '123456',\r\n                language: 'en',\r\n                theme: ''\r\n            },\r\n\r\n            MANAGER_USER = {\r\n                name: 'manager_user',\r\n                email: 'test2piplife@mail.ru',\r\n                language: 'en',\r\n                pwd_fail_count: 0,\r\n                pwd_last_fail: null,\r\n                paid: false,\r\n                admin: false,\r\n                party_access: [\r\n                    {\r\n                        share_level: 0,\r\n                        type: 'partner',\r\n                        party_name: 'Bill Tester',\r\n                        party_id: '55f20e7b4b0c570c4b1f12e0',\r\n                        contributor: false,\r\n                        manager: false,\r\n                        id: '55f716315b46fab820dd8df3'\r\n                    },\r\n                    {\r\n                        share_level: 0,\r\n                        type: 'partner',\r\n                        party_name: 'emptyUser',\r\n                        party_id: 'user_id00000000000000001',\r\n                        contributor: false,\r\n                        manager: false,\r\n                        id: '55f716315b46fab820dd8de4'\r\n                    }\r\n                ],\r\n                sessions: [\r\n                    {\r\n                        address: '109.254.67.37',\r\n                        client: 'chrome',\r\n                        platform: 'windows 6.3',\r\n                        last_req: '2015-11-19T13:57:12.723Z',\r\n                        opened: '2015-11-19T13:57:12.723Z',\r\n                        id: 'session_id00000000000002'\r\n                    }, {\r\n                        address: '176.8.157.60',\r\n                        client: 'chrome',\r\n                        platform: 'windows 6.3',\r\n                        last_req: '2015-11-19T17:22:11.791Z',\r\n                        opened: '2015-11-19T17:22:11.791Z',\r\n                        id: 'session_id00000000000003'\r\n                    }\r\n                ],\r\n                signin: '2015-11-19T17:22:11.688Z',\r\n                signup: '2015-09-10T20:56:08.025Z',\r\n                active: true,\r\n                lock: false,\r\n                email_ver: false,\r\n                id: 'user_id00000000000000002',\r\n                last_session_id: 'session_id00000000000003'\r\n            },\r\n\r\n            EMPTY_USER = {\r\n                pwd_last_fail: null,\r\n                pwd_fail_count: 0,\r\n                name: 'emptyUser',\r\n                email: 'emptyUser@test.ru',\r\n                language: 'en',\r\n                paid: false,\r\n                admin: false,\r\n                party_access: [],\r\n                sessions: [\r\n                    {\r\n                        address: '176.8.157.60',\r\n                        client: 'chrome',\r\n                        platform: 'windows 6.3',\r\n                        last_req: '2015-11-19T17:34:42.019Z',\r\n                        opened: '2015-11-19T17:34:42.019Z',\r\n                        id: 'session_id00000000000002'\r\n                    }\r\n                ],\r\n                signin: '2015-11-19T17:34:41.934Z',\r\n                signup: '2015-11-19T17:34:41.721Z',\r\n                active: true,\r\n                lock: false,\r\n                email_ver: false,\r\n                id: 'user_id00000000000000001',\r\n                last_session_id: 'session_id00000000000002'\r\n            },\r\n\r\n            // define settings\r\n            SETTINGS1 = {\r\n                intro: {\r\n                    lastId: '55f6fc635b46fab820dd8cce',\r\n                    date: '2015-09-15T17:28:23.941Z'\r\n                },\r\n                party_id: 'user_id00000000000000001',\r\n                events: {\r\n                    viewType: 'kanban'\r\n                },\r\n                visions: {\r\n                    viewType: 'tile'\r\n                },\r\n                notes: {\r\n                    viewType: 'tile'\r\n                },\r\n                partners: {\r\n                    viewType: 'tile'\r\n                }\r\n            },\r\n            SETTINGS2 = {\r\n                intro: {\r\n                    lastId: '55f6fc635b46fab820dd8cce',\r\n                    date: '2015-09-15T17:28:23.941Z'\r\n                },\r\n                party_id: 'user_id00000000000000002',\r\n                messages: {\r\n                    viewType: 'send'\r\n                },\r\n                goals: {\r\n                    navId: 'all'\r\n                },\r\n                areas: {\r\n                    navId: 'now'\r\n                },\r\n                news: {\r\n                    viewType: 'tile'\r\n                }\r\n            };\r\n\r\n        return {\r\n            ABCD: ABCD,\r\n            ABCD_CAPITALIZE: ABCD_CAPITALIZE,\r\n            DIGIT: DIGIT,\r\n            SIGN: SIGN,\r\n            SETTINGS1: SETTINGS1,\r\n            SETTINGS2: SETTINGS2,\r\n            EMPTY_USER: EMPTY_USER,\r\n            MANAGER_USER: MANAGER_USER,\r\n            TESTER_ACCOUNT: TESTER_ACCOUNT,\r\n            SAMPLER_ACCOUNT: SAMPLER_ACCOUNT,\r\n            SERVER_URL: SERVER_URL\r\n        };\r\n    });\r\n\r\n})();\r\n","/**\r\n * @file Mock entry data\r\n * @copyright Digital Living Software Corp. 2014-2015\r\n */\r\n\r\n(function (_, chance) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTest.Entity', ['pipTest.DataSet', 'pipTest.General']);\r\n\r\n    thisModule.service('pipTestEntity', ['pipTestGeneral', function (pipTestGeneral) {\r\n\r\n        return {\r\n            getEntity: getEntity,\r\n            setContrib: setContrib,\r\n            getOneArea: getOneArea,\r\n            getAreasCollection: getAreasCollection,\r\n            getOneGoal: getOneGoal,\r\n            getGoalsCollection: getGoalsCollection\r\n        };\r\n\r\n        // get entity\r\n        function getEntity(propertyValues) {\r\n            var userId,\r\n                userName,\r\n                id,\r\n                titleLength,\r\n                entity;\r\n\r\n            userId = pipTestGeneral.getObjectId();\r\n            userName = chance.sentence({words: 2});\r\n            id = pipTestGeneral.getObjectId();\r\n            titleLength = 1 + Math.random() * 5;\r\n\r\n            entity = {\r\n                title: chance.sentence({words: titleLength}),\r\n                type: 'goal',\r\n                creator_id: userId,\r\n                creator_name: userName,\r\n                contribs: [{\r\n                    from_id: id,\r\n                    party_id: userId,\r\n                    party_name: 'emptyUser',\r\n                    accept: 'accepted',\r\n                    role: ''\r\n                }],\r\n                tags: [],\r\n                id: id\r\n            };\r\n\r\n            if (propertyValues) {\r\n                entity = _.assign(entity, propertyValues);\r\n            }\r\n\r\n            return entity;\r\n        }\r\n\r\n        // Set Contrib (entity, parties, contribCount)\r\n        function setContrib(party, partyArray, minContribCount, maxContribCount) {\r\n            if (!party || !partyArray) {\r\n                return;\r\n            }\r\n\r\n            var count,\r\n                chooseParty;\r\n\r\n            if (minContribCount && maxContribCount) {\r\n                count = Math.floor(Math.random() * (maxContribCount - minContribCount + 1));\r\n            } else {\r\n                count = minContribCount\r\n                    ? Math.floor(Math.random() * (partyArray.length - maxContribCount))\r\n                    : Math.floor(Math.random() * partyArray.length);\r\n            }\r\n\r\n            chooseParty = _.take(partyArray, count);\r\n\r\n            _.each(chooseParty, function (item) {\r\n                party.contribs.push({\r\n                    party_name: item.name,\r\n                    party_id: item.id,\r\n                    accept: pipTestGeneral.getOne(['accepted', 'invited'])\r\n                });\r\n            });\r\n\r\n            party.contribs = _.uniq(party.contribs, 'party_id');\r\n        }\r\n\r\n        // get area\r\n        function getOneArea(forUser, propertyValues) {\r\n            var params = {};\r\n\r\n            params.type = 'area';\r\n\r\n            if (forUser && forUser.name) {\r\n                params.creator_name = forUser.name;\r\n                params.creator_id = forUser.id;\r\n            }\r\n\r\n            return getEntity(params, propertyValues);\r\n        }\r\n\r\n        function getAreasCollection(count, forUser, propertyValues) {\r\n            var collection = [],\r\n                params = {},\r\n                i;\r\n\r\n            params.type = 'area';\r\n\r\n            if (forUser && forUser.name) {\r\n                params.creator_name = forUser.name;\r\n                params.creator_id = forUser.id;\r\n            }\r\n\r\n            for (i = 0; i < count; i++) {\r\n                collection.push(getEntity(params, propertyValues));\r\n            }\r\n\r\n            return collection;\r\n        }\r\n\r\n        // get goal\r\n        function getOneGoal(forUser, propertyValues) {\r\n            var params = {};\r\n\r\n            params.type = pipTestGeneral.getOne(['goal', 'aspiration', 'objective', 'dream', 'accomplishment']);\r\n\r\n            if (forUser && forUser.name) {\r\n                params.creator_name = forUser.name;\r\n                params.creator_id = forUser.id;\r\n            }\r\n\r\n            return getEntity(params, propertyValues);\r\n        }\r\n\r\n        function getGoalsCollection(count, forUser, propertyValues) {\r\n            var i,\r\n                collection = [],\r\n                params = {};\r\n\r\n            params.type = pipTestGeneral.getOne(['goal', 'aspiration', 'objective', 'dream', 'accomplishment']);\r\n\r\n            if (forUser && forUser.name) {\r\n                params.creator_name = forUser.name;\r\n                params.creator_id = forUser.id;\r\n            }\r\n\r\n            for (i = 0; i < count; i++) {\r\n                collection.push(getEntity(params, propertyValues));\r\n            }\r\n\r\n            return collection;\r\n        }\r\n\r\n        // function getTags() {\r\n            // {\r\n            //    'party_id': '55f1ee67880929ec46ec394c',\r\n            //    'tags': [\r\n            //    {\r\n            //        'tag': 'first tag',\r\n            //        'used': '2015-11-19T14:45:57.901Z',\r\n            //        'count': 39\r\n            //    },\r\n            //    {\r\n            //        'tag': '6',\r\n            //        'used': '2015-09-16T12:08:11.316Z',\r\n            //        'count': 1\r\n            //    },\r\n            //    {\r\n            //        'tag': 'yyyyyyyyyyyyyyy',\r\n            //        'used': '2015-09-24T16:20:09.244Z',\r\n            //        'count': 4\r\n            //    }\r\n            // ],\r\n            //    'id': '55f5edcf8175ba46db9dec74'\r\n            // }\r\n        // }\r\n\r\n    }]);\r\n\r\n})(window._, window.chance);\r\n","/**\r\n * @file Service provide utils\r\n * @copyright Digital Living Software Corp. 2014-2015\r\n */\r\n\r\n(function (_, chance) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTest.General', ['pipTest.DataSet']);\r\n\r\n    thisModule.service('pipTestGeneral', ['pipTestDataSet', function (pipTestDataSet) {\r\n\r\n        return {\r\n            getObjectId: getObjectId,\r\n            getOneWord: getOneWord,\r\n            getOne: getOne\r\n        };\r\n\r\n        // Returns random ID\r\n        function getObjectId(n, allowedChars) {\r\n            var poolObjectId = pipTestDataSet.ABCD + pipTestDataSet.DIGIT,\r\n                length = n || 16,\r\n                pool = allowedChars || poolObjectId;\r\n\r\n            return chance.string({length: length, pool: pool});\r\n        }\r\n\r\n        // Returns random one from the passed asset\r\n        function getOne(arr) {\r\n            return _.sample(arr);\r\n        }\r\n\r\n        // Returns random word\r\n        function getOneWord(n) {\r\n            var length = n && n > 0 ? Math.floor(Math.random() * n) : null,\r\n                poolWord = pipTestDataSet.ABCD + pipTestDataSet.ABCD_CAPITALIZE;\r\n\r\n            return chance.word({length: length, pool: poolWord});\r\n        }\r\n\r\n    }]);\r\n\r\n})(window._, window.chance);\r\n","/**\r\n * @file Registration of tests\r\n * @copyright Digital Living Software Corp. 2014-2015\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipTests', [\r\n        'pipTest.DataSet',\r\n        'pipTest.Account',\r\n        'pipTest.Entity',\r\n        'pipTest.UserParty',\r\n        'pipTest.General',\r\n        'pipTest.Content'\r\n    ]);\r\n\r\n})();\r\n","/**\r\n * @file Service provides mocked user's party\r\n * @copyright Digital Living Software Corp. 2014-2015\r\n */\r\n\r\n(function (_, chance) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTest.UserParty', ['pipTest.DataSet']);\r\n\r\n    thisModule.service('pipTestUserParty', ['pipTestDataSet', 'pipTestGeneral', function (pipTestDataSet, pipTestGeneral) {\r\n\r\n        return {\r\n            getOneUser: getOneUser,\r\n            getSettings: getSettings,\r\n            getParty: getParty,\r\n            getConnection: getConnection,\r\n            getPartyAccess: getPartyAccess,\r\n            getSession: getSession\r\n        };\r\n\r\n        function getSession(propertyValues) {\r\n            var date = new Date(chance.timestamp()),\r\n                session = {\r\n                    address: chance.ip(),\r\n                    client: pipTestGeneral.getOne(['chrome', 'mozilla', 'explorer']),\r\n                    platform: pipTestGeneral.getOne(['windows 8', 'windows 7', 'linux']),\r\n                    last_req: date.toJSON(),\r\n                    opened: date.toJSON(),\r\n                    id: pipTestGeneral.getObjectId()\r\n                };\r\n\r\n            if (propertyValues) {\r\n                session = _.assign(session, propertyValues);\r\n            }\r\n\r\n            return session;\r\n        }\r\n\r\n        // get user for testing\r\n        function getOneUser(propertyValues) {\r\n            var date1 = chance.timestamp(),\r\n                date2 = chance.timestamp(),\r\n\r\n                user = {\r\n                    pwd_last_fail: null,\r\n                    pwd_fail_count: 0,\r\n                    name: chance.first() + ' ' + chance.name(),\r\n                    email: chance.email(),\r\n                    language: pipTestGeneral.getOne(['en', 'ru', 'fr']),\r\n                    paid: chance.bool({likelihood: 30}),\r\n                    admin: false,\r\n                    party_access: getPartyAccess(),\r\n                    sessions: getSession(),\r\n                    signin: date1 > date2 ? new Date(date1).toJSON() : new Date(date2).toJSON(),\r\n                    signup: date1 > date2 ? new Date(date2).toJSON() : new Date(date1).toJSON(),\r\n                    active: true,\r\n                    lock: false,\r\n                    email_ver: false,\r\n                    id: pipTestGeneral.getObjectId(),\r\n                    last_session_id: pipTestGeneral.getObjectId()\r\n                };\r\n\r\n            if (propertyValues) {\r\n                user = _.assign(user, propertyValues);\r\n            }\r\n\r\n            return user;\r\n        }\r\n\r\n        function getPartyAccess(n, propertyValues) {\r\n            var result = [],\r\n                length = n || Math.floor(Math.random() * 10),\r\n                i,\r\n                p,\r\n                isContributor;\r\n\r\n            for (i = 0; i < length; i++) {\r\n                isContributor = chance.bool({likelihood: 30});\r\n\r\n                p = {\r\n                    share_level: 0,\r\n                    type: 'partner',\r\n                    party_name: chance.first() + ' ' + chance.name(),\r\n                    party_id: pipTestGeneral.getObjectId(),\r\n                    contributor: isContributor,\r\n                    manager: isContributor ? chance.bool({likelihood: 30}) : false,\r\n                    id: pipTestGeneral.getObjectId()\r\n                };\r\n\r\n                if (propertyValues) {\r\n                    p = _.assign(p, propertyValues);\r\n                }\r\n\r\n                result.push(p);\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        function getParty(propertyValues) {\r\n            var date1 = chance.timestamp(),\r\n                date2 = chance.timestamp(),\r\n                party = {\r\n                    name: chance.first() + ' ' + chance.name(),\r\n                    email: chance.email(),\r\n                    type: 'person', // todo ??\r\n                    gender: chance.gender().toLowerCase(),\r\n                    loc_name: chance.address(),\r\n                    loc_pos: {\r\n                        type: 'Point',\r\n                        coordinates: [\r\n                            chance.floating({min: -120, max: 120}),\r\n                            chance.floating({min: -120, max: 120})\r\n                        ]\r\n                    },\r\n                    join: 'approve', // todo ??\r\n                    updated: date1 > date2 ? new Date(date1).toJSON() : new Date(date2).toJSON(),\r\n                    created: date1 > date2 ? new Date(date2).toJSON() : new Date(date1).toJSON(),\r\n                    id: pipTestGeneral.getObjectId()\r\n                };\r\n\r\n            if (propertyValues) {\r\n                party = _.assign(party, propertyValues);\r\n            }\r\n\r\n            return party;\r\n        }\r\n\r\n        function getConnection(party, propertyValues) {\r\n            if (!party || !party.id || !party.name) {\r\n                return null;\r\n            }\r\n\r\n            var isContributor = chance.bool({likelihood: 30}),\r\n                con = {\r\n                    party_id: party.id,\r\n                    party_type: party.type,\r\n                    party_name: party.name,\r\n                    to_party_id: pipTestGeneral.getObjectId(),\r\n                    to_party_name: chance.first() + ' ' + chance.name(),\r\n                    to_party_type: 'person', // todo\r\n                    type: 'partner', // todo\r\n                    share_level: chance.integer({min: 0, max: 4}),\r\n                    accept: 'joined', // todo\r\n                    group_ids: [],\r\n                    contributor: isContributor,\r\n                    manager: isContributor ? chance.bool({likelihood: 30}) : false,\r\n                    snoozed: false,\r\n                    created: new Date(chance.timestamp()).toJSON(),\r\n                    id: pipTestGeneral.getObjectId()\r\n                };\r\n\r\n            if (propertyValues) {\r\n                con = _.assign(con, propertyValues);\r\n            }\r\n\r\n            return con;\r\n        }\r\n\r\n        // Returns settings mocked object due to passed number\r\n        function getSettings(settingsConfig) {\r\n            return settingsConfig === 2 ? pipTestDataSet.SETTINGS2 : pipTestDataSet.SETTINGS1;\r\n        }\r\n\r\n    }]);\r\n\r\n})(window._, window.chance);\r\n"],"sourceRoot":"/source/"}