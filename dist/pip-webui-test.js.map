{"version":3,"sources":["tests.js","generators/data_generators.js","generators/generator_services.js","generators/party_access_data_generator.js","generators/party_data_generators.js","generators/sessions_data_generator.js","generators/user_data_generator.js","dataset/test_collection.js","dataset/test_data_service.js","dataset/test_data_set.js","mocks/pip_mocked_announcements.js","mocks/pip_mocked_entry.js","mocks/pip_mocked_feedbacks.js","mocks/pip_mocked_guides.js","mocks/pip_mocked_images.js","mocks/pip_mocked_party.js","mocks/pip_mocked_resource.js","mocks/pip_mocked_servers_activities.js","mocks/pip_mocked_tips.js","mocks/pip_mocked_users.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrjtLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrrfile":"pip-webui-test.js","sourcesContent":["/**\r\n * @file Registration of WebUI tests\r\n * @copyright Digital Living Software Corp. 2014-2015\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipWebuiTests', [\r\n        'pipMocked',\r\n        'pipMocked.Users',\r\n        'pipMocked.Entry',\r\n        'pipMocked.Party',\r\n        'pipMocked.Announcements',\r\n        'pipMocked.Feedbacks',\r\n        'pipMocked.Tips',\r\n        'pipMocked.Guides',\r\n        'pipMocked.ServersActivities',\r\n        'pipMocked.Images',\r\n\r\n        'pipGenerators',\r\n        'pipBasicGeneratorServices',        \r\n        'pipGenerators.User',\r\n        'pipGenerators.PartyAccess',   \r\n        'pipGenerators.Sessions',    \r\n        'pipGenerators.Party',\r\n        \r\n        'pipTestCollection',\r\n        'pipTestDataSet',\r\n        'pipTestDataService'\r\n    ]);\r\n\r\n\r\n    thisModule.run(\r\n        ['pipMockedResource', 'MockedUsersResource', 'MockedCurrentUserResource', 'TruePathResource', 'MockedSigninResource', 'MockedSignupResource', 'MockedSignoutResource', 'MockedSignupValidateResource', 'MockedVerifyEmailResource', 'MockedRecoverPasswordResource', 'MockedResetPasswordResource', 'MockedChangePasswordResource', 'MockedUserSessionsResource', 'MockedTipsResource', 'MockedAnnouncementsResource', 'MockedFeedbacksResource', 'MockedGuidesResource', 'MockedImagesResource', 'MockedPartyResource', 'MockedServersActivitiesResource', function(pipMockedResource, MockedUsersResource, MockedCurrentUserResource, TruePathResource, MockedSigninResource,\r\n        MockedSignupResource, MockedSignoutResource, MockedSignupValidateResource, MockedVerifyEmailResource,\r\n        MockedRecoverPasswordResource, MockedResetPasswordResource, MockedChangePasswordResource, MockedUserSessionsResource,\r\n        MockedTipsResource, MockedAnnouncementsResource, MockedFeedbacksResource, MockedGuidesResource, MockedImagesResource,\r\n        MockedPartyResource, MockedServersActivitiesResource) {\r\n\r\n            pipMockedResource.addMocks(MockedUsersResource);\r\n            pipMockedResource.addMocks(MockedCurrentUserResource);\r\n\r\n            pipMockedResource.addMocks(MockedUserSessionsResource);\r\n\r\n            pipMockedResource.addMocks(MockedSigninResource);\r\n            pipMockedResource.addMocks(MockedSignupResource);\r\n            pipMockedResource.addMocks(MockedSignoutResource);\r\n            pipMockedResource.addMocks(MockedSignupValidateResource);\r\n            pipMockedResource.addMocks(MockedVerifyEmailResource);\r\n            pipMockedResource.addMocks(MockedRecoverPasswordResource);\r\n            pipMockedResource.addMocks(MockedResetPasswordResource);\r\n            pipMockedResource.addMocks(MockedChangePasswordResource);\r\n\r\n            // ----------------\r\n            pipMockedResource.addMocks(MockedTipsResource);\r\n            pipMockedResource.addMocks(MockedAnnouncementsResource);\r\n            pipMockedResource.addMocks(MockedFeedbacksResource);\r\n            pipMockedResource.addMocks(MockedGuidesResource);\r\n            pipMockedResource.addMocks(MockedImagesResource);\r\n            pipMockedResource.addMocks(MockedPartyResource);\r\n            pipMockedResource.addMocks(MockedServersActivitiesResource);\r\n            \r\n            pipMockedResource.addMocks(TruePathResource);\r\n            pipMockedResource.registerStandardResources();\r\n\r\n        }]\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file pipDataGenerators\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipGenerators', []);\r\n\r\n    thisModule.factory('pipDataGenerator', ['$log', function ($log) {\r\n\r\n        var dataGenerator = function(name, refs) {\r\n\r\n            // Collection name\r\n            this.name = name;\r\n            // List of references collection \r\n            this.refs = refs; \r\n\r\n             // Initializes object with default fields\r\n            this.initObject = function (obj) {\r\n                var result = this.newObject();\r\n\r\n                if (obj) {\r\n                    result = _.assign(result, obj);\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            // Create a new random object\r\n            this.newObject = function (refs) {\r\n                var objRefs = refs ? refs : this.refs,\r\n                    result = this.generateObj(objRefs);\r\n\r\n                return result;                \r\n            }\r\n\r\n            this.newObjectList = function (count, refs) {\r\n                var i, obj, result = [];\r\n\r\n                if (count > 0) {\r\n                    for (i = 0; i < count; i++) {\r\n                        obj = this.newObject(refs);\r\n                        result.push(obj);\r\n                    }\r\n                }\r\n\r\n                return result;                \r\n            }\r\n\r\n            this.initObjectList = function (obj) {\r\n                var i, newObj, result = [];\r\n\r\n                if (count > 0) {\r\n                    for (i = 0; i < count; i++) {\r\n                        newObj = this.newObject();\r\n                        result.push(_.assign(newObj, obj));\r\n                    }\r\n                }\r\n\r\n                return result;              \r\n            }\r\n\r\n            this.updateObject = function (obj, refs) {\r\n                var result = this.newObject(refs);\r\n\r\n                if (obj) {\r\n                    result = _.assign(result, obj);\r\n                    \r\n                    return result; \r\n                } else {\r\n                    return null  \r\n                }\r\n            }\r\n\r\n            this.generateObj = function generateObj(refs) {\r\n                return {};\r\n            }\r\n\r\n        }\r\n\r\n        return dataGenerator;\r\n\r\n    }]);\r\n\r\n})();\r\n ","/**\r\n * @file Service provide utils\r\n * @copyright Digital Living Software Corp. 2014-2015\r\n */\r\n\r\n(function (_, chance) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipBasicGeneratorServices', []);\r\n\r\n    thisModule.service('pipBasicGeneratorServices', function () {\r\n        \r\n        var ABCD = 'abcdefghijklmnopqrstuvwxyz',\r\n            ABCD_CAPITALIZE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\r\n            DIGIT = '0123456789',\r\n            SIGN = ' .,;:-!?',\r\n\r\n            SERVER_URL = 'http://alpha.pipservices.net';\r\n\r\n        return {\r\n            ABCD: ABCD,\r\n            ABCD_CAPITALIZE: ABCD_CAPITALIZE,\r\n            DIGIT: DIGIT,\r\n            SIGN: SIGN,\r\n\r\n            getObjectId: getObjectId,\r\n            getOneWord: getOneWord,\r\n            getPassword: getPassword,\r\n            getEmail: getEmail,\r\n            serverUrl:serverUrl,\r\n            getName: getName,\r\n            getOne: getOne,\r\n            getMany: getMany\r\n        };\r\n\r\n        // Returns random ID\r\n        function getObjectId(n, allowedChars) {\r\n            var poolObjectId = ABCD + DIGIT,\r\n                length = n || 16,\r\n                pool = allowedChars || poolObjectId;\r\n\r\n            return chance.string({length: length, pool: pool});\r\n        }\r\n\r\n        function getEmail() {\r\n            return chance.email();\r\n        }\r\n\r\n        function getPassword() {\r\n            return getOneWord(8);\r\n        }\r\n\r\n        // Returns random one from the passed asset\r\n        function getOne(arr) {\r\n            return _.sample(arr);\r\n        }\r\n\r\n        // Returns random one from the passed asset\r\n        function getMany(arr, count) {\r\n            var number = count ? count : Math.floor(Math.random() * arr.length); \r\n\r\n            return _.sampleSize(arr, number);\r\n        }\r\n\r\n        function serverUrl(serverUrl) {\r\n            if (serverUrl) {\r\n                SERVER_URL = serverUrl;\r\n            }\r\n\r\n            return SERVER_URL;\r\n        }\r\n\r\n        // Returns random word\r\n        function getOneWord(n) {\r\n            var length = n && n > 0 ? Math.floor(Math.random() * n) : null,\r\n                poolWord = ABCD + ABCD_CAPITALIZE;\r\n\r\n            return chance.word({length: length, pool: poolWord});\r\n        }\r\n\r\n        function getName() {\r\n            var name = chance.first() + ' ' + chance.name();\r\n\r\n            return name;\r\n        }\r\n\r\n    });\r\n\r\n})(window._, window.chance);\r\n","/**\r\n * @file pipPartyAccessDataGenerator\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipGenerators.PartyAccess', []);\r\n\r\n    thisModule.factory('pipPartyAccessDataGenerator', ['pipDataGenerator', 'pipBasicGeneratorServices', '$log', function (pipDataGenerator, pipBasicGeneratorServices, $log) {\r\n            \r\n            var child = new pipDataGenerator('PartyAccess', []);\r\n\r\n            child.isContributorChance = 30;\r\n            child.isManagerChance = 30;\r\n            child.defaultShareLevel = 0;\r\n            child.defaultType = 'partner';\r\n\r\n            child.generateObj = function generateObj() {\r\n                var isContributor = chance.bool({likelihood: child.isContributorChance}),\r\n                    obj = {\r\n                        share_level: child.defaultShareLevel,\r\n                        type: child.defaultType,\r\n                        party_name: chance.first() + ' ' + chance.name(),\r\n                        party_id: pipBasicGeneratorServices.getObjectId(),\r\n                        contributor: chance.bool({likelihood: child.isContributorChance}),\r\n                        manager: isContributor ? chance.bool({likelihood: child.isManagerChance}) : false,\r\n                        id: pipBasicGeneratorServices.getObjectId()\r\n                    };\r\n\r\n                return obj;\r\n            }\r\n\r\n            return child;\r\n    }]);\r\n\r\n})();","/**\r\n * @file pipPartyDataGenerator\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipGenerators.Party', []);\r\n\r\n    thisModule.factory('pipPartyDataGenerator', ['pipDataGenerator', 'pipBasicGeneratorServices', '$log', function (pipDataGenerator, pipBasicGeneratorServices, $log) {\r\n\r\n            var child = new pipDataGenerator('User', ['PartyAccess', 'Sessions']);\r\n\r\n            child.defaultType = 'person';\r\n            child.defaultJoin = 'approve';\r\n\r\n            child.generateObj = function generateObj() {\r\n                var date1 = chance.timestamp(),\r\n                    date2 = chance.timestamp(),\r\n                    party = {\r\n                        name: chance.first() + ' ' + chance.name(),\r\n                        email: chance.email(),\r\n                        type: child.defaultType,\r\n                        gender: chance.gender().toLowerCase(),\r\n                        loc_name: chance.address(),\r\n                        loc_pos: {\r\n                            type: 'Point',\r\n                            coordinates: [\r\n                                chance.floating({min: -120, max: 120}),\r\n                                chance.floating({min: -120, max: 120})\r\n                            ]\r\n                        },\r\n                        join: child.defaultJoin,\r\n                        updated: date1 > date2 ? new Date(date1).toJSON() : new Date(date2).toJSON(),\r\n                        created: date1 > date2 ? new Date(date2).toJSON() : new Date(date1).toJSON(),\r\n                        id: pipBasicGeneratorServices.getObjectId()\r\n                    };\r\n\r\n                return party;\r\n            }\r\n\r\n            return child;\r\n    }]);\r\n\r\n})();\r\n ","/**\r\n * @file pipSessionsDataGenerator\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipGenerators.Sessions', []);\r\n\r\n    thisModule.factory('pipSessionsDataGenerator', ['pipDataGenerator', 'pipBasicGeneratorServices', '$log', function (pipDataGenerator, pipBasicGeneratorServices, $log) {\r\n            \r\n            var child = new pipDataGenerator('Sessions', []);\r\n\r\n            child.generateObj = function generateObj() {\r\n                var date = new Date(chance.timestamp()),\r\n                    session = {\r\n                        address: chance.ip(),\r\n                        client: pipBasicGeneratorServices.getOne(['chrome', 'mozilla', 'explorer']), // todo:  заменить на массивы из dataGenerators?\r\n                        platform: pipBasicGeneratorServices.getOne(['windows 8', 'windows 7', 'linux']),\r\n                        last_req: date.toJSON(),\r\n                        opened: date.toJSON(),\r\n                        id: pipBasicGeneratorServices.getObjectId()\r\n                    };\r\n\r\n                return session;\r\n            }\r\n\r\n            return child;\r\n    }]);\r\n\r\n})();","/**\r\n * @file pipUserDataGenerator\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipGenerators.User', []);\r\n\r\n    thisModule.factory('pipUserDataGenerator', ['pipDataGenerator', 'pipBasicGeneratorServices', '$log', 'pipPartyAccessDataGenerator', 'pipSessionsDataGenerator', function (pipDataGenerator, pipBasicGeneratorServices, $log, \r\n        pipPartyAccessDataGenerator, pipSessionsDataGenerator) {\r\n\r\n            var refs = new Array();\r\n\r\n            refs['PartyAccess'] = pipPartyAccessDataGenerator.newObjectList(10);\r\n            refs['Sessions'] = pipSessionsDataGenerator.newObjectList(10);\r\n\r\n            var child = new pipDataGenerator('User', refs);\r\n\r\n            child.generateObj = function generateObj(refs) {\r\n                var date1 = chance.timestamp(),\r\n                    date2 = chance.timestamp(),\r\n                    nowDate = new Date(),\r\n                    user,\r\n                    PartyAccess = [],\r\n                    Sessions = [],\r\n                    currentSession = pipSessionsDataGenerator.initObject({\r\n                        last_req: nowDate.toJSON(),\r\n                        opened: nowDate.toJSON(),\r\n                    });\r\n\r\n                if (refs && angular.isArray(refs)) {\r\n                    PartyAccess = refs['PartyAccess'] || [];\r\n                    Sessions = refs['Sessions'] || [];\r\n                }\r\n\r\n                    user = {\r\n                        pwd_last_fail: null,\r\n                        pwd_fail_count: 0,\r\n                        name: pipBasicGeneratorServices.getName(),\r\n                        email: chance.email(),\r\n                        language: pipBasicGeneratorServices.getOne(['en', 'ru', 'fr']), \r\n                        paid: chance.bool({likelihood: 30}),\r\n                        admin: false,\r\n                        party_access: pipBasicGeneratorServices.getMany(PartyAccess),\r\n                        sessions: pipBasicGeneratorServices.getMany(Sessions),\r\n                        signin: date1 > date2 ? new Date(date1).toJSON() : new Date(date2).toJSON(),\r\n                        signup: date1 > date2 ? new Date(date2).toJSON() : new Date(date1).toJSON(),\r\n                        active: true,\r\n                        lock: false,\r\n                        email_ver: false,\r\n                        id: pipBasicGeneratorServices.getObjectId(),\r\n                        last_session_id: currentSession.id  \r\n                    };\r\n\r\n                    user.sessions.push(currentSession);\r\n\r\n                return user;\r\n            }\r\n\r\n            return child;\r\n    }]);\r\n\r\n})();\r\n ","/**\r\n * @file pipTestCollection\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTestCollection', []);\r\n\r\n    // Collection of test data stored in test dataset\r\n    thisModule.factory('TestCollection', ['$log', function ($log) {\r\n\r\n        // Define the constructor function.\r\n        return function (generator, name, size, refs) {\r\n            if (!generator) {\r\n                throw new Error('TestCollection: generator is required');\r\n            }\r\n\r\n            this.generator = generator;\r\n            this.size = size ? size : 0;\r\n            this.refs = getRefs(generator, refs);\r\n            this.name = getName(generator, name);\r\n            this.collection = [];\r\n            this.isInit = false;\r\n\r\n            this.getGeneratorName = getGeneratorName;\r\n            this.getSize = getSize;         \r\n\r\n            this.init = init;         \r\n            this.getAll = getAll;         \r\n            this.getByIndex = getByIndex;         \r\n            this.findById = findById;         \r\n            this.create = create;         \r\n            this.update = update;         \r\n            this.deleteById = deleteById;         \r\n            this.deleteByIndex = deleteByIndex; \r\n                    \r\n        }\r\n            \r\n        function getGeneratorName() {\r\n                return this.generator.name;\r\n            }\r\n\r\n        function getSize() {\r\n                return this.collection.length;\r\n            }    \r\n\r\n        // public init(collection: any[]): void;\r\n        function init(collection) {\r\n            if (collection && angular.isArray(collection)) {\r\n                this.collection = _.cloneDeep(collection);\r\n                this.size = collection.length;\r\n                //this.refs = ???\r\n\r\n                return;\r\n            }\r\n\r\n            if (this.size === 0) { \r\n                this.collection = [];\r\n\r\n                return\r\n            } \r\n\r\n            this.collection = this.generator.newObjectList(this.size, this.refs);\r\n            this.isInit = true;\r\n        }\r\n    \r\n        // public getAll(): any[];\r\n        function getAll() {\r\n            return _.cloneDeep(this.collection);\r\n        }     \r\n\r\n        // public get(index: number): any[];\r\n        function getByIndex(index) {\r\n            var result = null;\r\n\r\n            if (index === undefined || index === null || index < 0 || index > this.collection.length - 1) {\r\n                return result;\r\n            }\r\n\r\n            result = _.cloneDeep(this.collection[index]);\r\n\r\n            return result;\r\n        }    \r\n\r\n        // public findById(id: string): any;\r\n        function findById(id, field) {\r\n            var result = null,\r\n                fieldId = field ? field : 'id';\r\n\r\n            if (id === undefined || id === null) {\r\n                return result;\r\n            }\r\n\r\n            result = _.find(this.collection, {'id': id}); // todo: replace to fieldId\r\n\r\n            return result || null;\r\n        }    \r\n\r\n        // public create(obj: any): any;\r\n        function create(obj) {\r\n            var result = this.generator.initObject(obj);\r\n\r\n            if (angular.isObject(result)) {\r\n                this.collection.push(result);\r\n            }\r\n\r\n            return result;\r\n        }    \r\n\r\n        // public update(id: string, obj: any): any;\r\n        function update(id, obj) {\r\n            var result;\r\n\r\n            if (id === undefined || id === null || !angular.isObject(obj)) {\r\n                // todo: trow error?\r\n                return null;\r\n            }\r\n\r\n            result = this.findById(id);\r\n\r\n            if (angular.isObject(result)) {\r\n                result = _.assign(result, obj);\r\n                // todo: replace into collection ???\r\n            } else {\r\n                result = null;\r\n            }\r\n\r\n            return result;\r\n        }    \r\n\r\n        // public delete(id: string): any;\r\n        function deleteById(id) {\r\n            var i, match = false;\r\n\r\n            for (i = 0; i < this.collection.length; i++) {\r\n                if (this.collection[i].id === id) {\r\n                    match = true;\r\n                    this.collection.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return match;            \r\n        }    \r\n\r\n        // public delete(id: string): any;\r\n        function deleteByIndex(index) {\r\n            if (index === undefined || index === null || index < 0 || index > this.collection.length - 1) {\r\n                return false;\r\n            }\r\n\r\n            this.collection.splice(index, 1);\r\n\r\n            return true;            \r\n        }\r\n\r\n        // ----------------------------------\r\n\r\n        function getRefs(generator, refs) {\r\n            var result;\r\n            \r\n            if (refs && angular.isArray(refs)) {\r\n                return _.cloneDeep(refs);\r\n            } else if (generator.refs && angular.isArray(generator.refs)) {\r\n                return _.cloneDeep(generator.refs);\r\n            } else {\r\n                return new Array(); \r\n            }\r\n        }\r\n\r\n        function getName(generator, name) {\r\n            if (name) {\r\n                return name;\r\n            } else {\r\n                return generator.name;\r\n            } \r\n        }\r\n\r\n    }]);\r\n\r\n})();","/**\r\n * @file pipTestDataService\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTestDataService', []);\r\n\r\n    thisModule.factory('pipTestDataService', \r\n        ['pipTestDataSet', function(pipTestDataSet) {\r\n\r\n            // Angular service that holds singleton test dataset that is shared across all\r\n\r\n            var dataset = new pipTestDataSet();\r\n\r\n            return {\r\n                \r\n                getDataset: getDataset\r\n\r\n            };\r\n\r\n            // Get singleton dataset\r\n            function getDataset() {\r\n\r\n                return dataset;\r\n\r\n            }\r\n\r\n            \r\n\r\n        }]\r\n    );\r\n\r\n})();","/**\r\n * @file pipTestDataSet\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTestDataSet', []);\r\n\r\n    // Test dataset, that can be used to hold state of rest api\r\n    thisModule.factory('pipTestDataSet', ['$log', function ($log) {\r\n        \r\n        // Define the constructor function.\r\n        return function () {\r\n\r\n            this.currentUser = null;\r\n            this.currentParty = null;\r\n            this.dataSet = new Array();\r\n\r\n            this.init = init;         \r\n            this.add = add;         \r\n            this.get = get;         \r\n\r\n            this.getCurrentUser = getCurrentUser;\r\n            this.setCurrentUser = setCurrentUser;\r\n            this.setCurrentParty = setCurrentParty;\r\n            this.getCurrentParty = getCurrentParty;\r\n                    \r\n        }\r\n\r\n        // Initializes all registered collectons\r\n        function init() {\r\n            var i;\r\n\r\n            for (i in this.dataSet) {\r\n                if (this.dataSet[i] && this.dataSet[i].isInit === false) {\r\n                    this.dataSet[i].init();\r\n                }\r\n            }    \r\n        }\r\n   \r\n        // Registers a new collection\r\n        function add(collection) {\r\n            var name;\r\n            \r\n            if (collection && angular.isObject(collection) && collection.name) {\r\n                name = collection.name;\r\n                this.dataSet[name] = _.cloneDeep(collection);\r\n            } else {\r\n                throw new Error('pipTestDataSet: collection is required');\r\n            }\r\n        }\r\n\r\n        // Gets registered collection by its name\r\n        function get(name) {\r\n            if (name && angular.isString(name)) {\r\n                return this.dataSet[name];\r\n            } else {\r\n                throw new Error('pipTestDataSet: name must be a string');\r\n            }\r\n        }\r\n\r\n        // ---------------------------\r\n\r\n        function setCurrentUser(user) {\r\n            if (user && angular.isObject(user) && user.id) {\r\n                this.currentUser = _.cloneDeep(user);\r\n            } else {\r\n                throw new Error('pipTestDataSet: currentUser must be a object');\r\n            }\r\n        }        \r\n\r\n        function getCurrentUser() {\r\n            return this.currentUser;\r\n        }\r\n   \r\n        function setCurrentParty(party) {\r\n            if (party && angular.isObject(party) && party.id) {\r\n                this.currentParty = _.cloneDeep(party);\r\n            } else {\r\n                throw new Error('pipTestDataSet: currentParty must be a object');\r\n            }\r\n        }\r\n\r\n        function getCurrentParty() {\r\n            return this.currentParty;\r\n        }      \r\n\r\n    }]);\r\n\r\n})();","/**\r\n * @file MockedAnnouncementsResource\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * \r\n * Mocked:\r\n * /api/announcements/:id\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocked.Announcements', ['ngMockE2E', 'ngResource']);\r\n\r\n    thisModule.factory('MockedAnnouncementsResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/announcements';\r\n\r\n        child.register = function() {\r\n\r\n                   \r\n        }\r\n\r\n        return child;\r\n    }]);\r\n\r\n})();","/**\r\n * @file pipMockedEntry\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * \r\n *  Mocked:\r\n * /api/signup_validate\r\n * /api/verify_email\r\n * /api/users/:party_id/resend_email_verification\r\n * /api/change_password\r\n * /api/reset_password/api/recover_password\r\n * /api/signup\r\n * /api/signout\r\n * /api/signin\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocked.Entry', ['ngMockE2E', 'ngResource']);\r\n\r\n    thisModule.factory('MockedSigninResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/signin';\r\n\r\n        child.register = function() {\r\n\r\n            // POST /api/signin\r\n            // expected data { email: email, password: password, remember: remember}                 \r\n            $httpBackend.whenPOST(child.fakeUrl + child.api).respond(function(method, url, data, headers, params) {\r\n                console.log('pipMocks.Users22222', data, headers, params);\r\n\r\n                return [200, {}, {}];\r\n            });             \r\n        }\r\n\r\n        return child;\r\n    }]);    \r\n\r\n    thisModule.factory('MockedSignupResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/signup';\r\n\r\n        child.register = function() {\r\n\r\n            // POST /api/signup\r\n            // expected data { name: name, email: email, password: password, language: language}            \r\n            $httpBackend.whenPOST(child.fakeUrl + child.api).respond(function(method, url, data, headers, params) {\r\n                console.log('pipMocks.Users22222', data, headers, params);\r\n\r\n                return [200, {}, {}];\r\n            });             \r\n        }\r\n\r\n        return child;\r\n    }]); \r\n\r\n    thisModule.factory('MockedSignoutResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/signout';\r\n\r\n        child.register = function() {\r\n\r\n            // POST /api/signout\r\n            // expected data {}\r\n            $httpBackend.whenPOST(child.fakeUrl + child.api).respond(function(method, url, data, headers, params) {\r\n                console.log('pipMocks.Users22222', data, headers, params);\r\n\r\n                return [200, {}, {}];\r\n            });             \r\n        }\r\n\r\n        return child;\r\n    }]); \r\n\r\n    thisModule.factory('MockedSignupValidateResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/signup_validate';\r\n\r\n        child.register = function() {\r\n\r\n            // POST /api/signup_validate,\r\n            // expected data {email: newValue}            \r\n            $httpBackend.whenPOST(child.fakeUrl + child.api).respond(function(method, url, data, headers, params) {\r\n                console.log('pipMocks.Users22222', data, headers, params);\r\n\r\n                return [200, {}, {}];\r\n            });             \r\n        }\r\n\r\n        return child;\r\n    }]); \r\n\r\n    thisModule.factory('MockedVerifyEmailResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/verify_email';\r\n\r\n        child.register = function() {\r\n\r\n            // POST /api/verify_email,\r\n            // expected data {email: $scope.data.email, code: $scope.data.code}\r\n            $httpBackend.whenPOST(child.fakeUrl + child.api).respond(function(method, url, data, headers, params) {\r\n                console.log('pipMocks.Users22222', data, headers, params);\r\n\r\n                return [200, {}, {}];\r\n            });             \r\n        }\r\n\r\n        return child;\r\n    }]); \r\n\r\n    thisModule.factory('MockedRecoverPasswordResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/recover_password';\r\n      \r\n        child.register = function() {\r\n\r\n            // POST /api/recover_password,\r\n            // expected data {email: $scope.data.email}\r\n            $httpBackend.whenPOST(child.fakeUrl + child.api).respond(function(method, url, data, headers, params) {\r\n                console.log('pipMocks.Users22222', data, headers, params);\r\n\r\n                return [200, {}, {}];\r\n            });             \r\n        }\r\n\r\n        return child;\r\n    }]); \r\n\r\n    thisModule.factory('MockedResetPasswordResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/reset_password';\r\n\r\n        child.register = function() {\r\n\r\n            // POST /api/reset_password,\r\n            // expected data {email: $scope.data.email,code: $scope.data.code,password: $scope.data.password}\r\n            $httpBackend.whenPOST(child.fakeUrl + child.api).respond(function(method, url, data, headers, params) {\r\n                console.log('pipMocks.Users22222', data, headers, params);\r\n\r\n                return [200, {}, {}];\r\n            });             \r\n        }\r\n\r\n        return child;\r\n    }]);   \r\n\r\n    thisModule.factory('MockedChangePasswordResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/change_password';\r\n\r\n        child.register = function() {\r\n\r\n            // POST /api/change_password, \r\n            // todo: expected ??\r\n            $httpBackend.whenPOST(child.fakeUrl + child.api).respond(function(method, url, data, headers, params) {\r\n                console.log('pipMocks.Users22222', data, headers, params);\r\n\r\n                return [200, {}, {}];\r\n            });             \r\n        }\r\n\r\n        return child;\r\n    }]);  \r\n\r\n})();\r\n \r\n","/**\r\n * @file MockedFeedbacksResource\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * \r\n * Mocked:\r\n * /api/feedbacks/:id\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocked.Feedbacks', ['ngMockE2E', 'ngResource']);\r\n\r\n    thisModule.factory('MockedFeedbacksResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/feedbacks';\r\n\r\n        child.register = function() {\r\n\r\n                   \r\n        }\r\n\r\n        return child;\r\n    }]);\r\n\r\n})();","/**\r\n * @file MockedGuidesResource\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * \r\n * Mocked:\r\n * /api/guides/:id\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocked.Guides', ['ngMockE2E', 'ngResource']);\r\n\r\n    thisModule.factory('MockedGuidesResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/guides';\r\n\r\n        child.register = function() {\r\n\r\n                   \r\n        }\r\n\r\n        return child;\r\n    }]);\r\n\r\n})();","/**\r\n * @file MockedImagesResource\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * \r\n * Mocked:\r\n * /api/image_sets/:id\r\n * /api/images/search\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocked.Images', ['ngMockE2E', 'ngResource']);\r\n\r\n    thisModule.factory('MockedImagesResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/image_sets';\r\n\r\n        child.register = function() {\r\n\r\n                   \r\n        }\r\n\r\n        return child;\r\n    }]);\r\n\r\n})();","/**\r\n * @file MockedPartyResource\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * \r\n * Mocked:\r\n * /api/parties/:id\r\n * /api/parties/:party_id/settings\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocked.Party', ['ngMockE2E', 'ngResource']);\r\n\r\n    thisModule.factory('MockedPartyResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/parties/';\r\n\r\n        child.register = function() {\r\n\r\n                   \r\n        }\r\n\r\n        return child;\r\n    }]);\r\n\r\n})();","/**\r\n * @file pipMocked\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n\r\n/* API list\r\n\r\n+ /api/users/current\r\n+ /api/users/:id\r\n\r\n+ /api/users/:party_id/sessions/:id\r\n\r\n/api/parties/:id\r\n/api/parties/:party_id/settings\r\n\r\n/api/signup_validate\r\n/api/verify_email\r\n/api/users/:party_id/resend_email_verification\r\n/api/change_password\r\n/api/reset_password\r\n/api/recover_password\r\n/api/signup\r\n/api/signout\r\n/api/signin\r\n\r\n/api/image_sets/:id\r\n/api/images/search\r\n\r\nimages:\r\nget serverurl + /api/parties/ + partyId + \"/files/\" + imageId\r\n    serverUrl + '/api/parties/' + partyId + '/files\r\n\r\n    \r\n    // document\r\n$upload.http({\r\nurl: addItemUrl(item),\r\nheaders: { 'Content-Type': file.type },\r\ndata: e.target.result\r\n})    \r\n\r\nserverUrl + '/api/parties/' + partyId + '/files?name='\r\n\r\n$http['delete'](getItemIdUrl(item))\r\n\r\n// image_sets\r\n$http['post'](url)\r\n\r\n$upload.http({\r\nurl: FILE_URL + '?name=' + file.name,\r\nheaders: { 'Content-Type': file.type },\r\ndata: e.target.result\r\n\r\n\r\n/api/servers/activities/:id\r\n/api/guides/:id\r\n/api/tips/:id\r\n/api/feedbacks/:id\r\n/api/announcements/:id\r\n\r\n})\r\n\r\n\r\navatar\r\nget serverUrl + '/api/parties/' + partyId + '/' + entityTypes[type] + '/' + id + '/avatar\r\nget serverUrl + '/api/parties/' + partyId + '/avatar\r\n\r\n*/\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocked', ['ngMockE2E', 'ngResource']);\r\n\r\n    thisModule.factory('pipMockedResource', function () {\r\n        var mocks = [];\r\n\r\n\r\n        return {\r\n            addMocks: addMocks,\r\n            registerStandardResources: registerStandardResources\r\n        };\r\n\r\n        function registerStandardResources() {\r\n            for (var i = 0; i < mocks.length; i++) {\r\n                var obj = mocks[i];\r\n                obj.register();\r\n            }\r\n        }\r\n\r\n        function registerSampleResources() {\r\n\r\n        }\r\n\r\n        function addMocks(extension) {\r\n            if (extension && angular.isObject(extension)) {\r\n                mocks.push(extension);\r\n            }\r\n        };\r\n\r\n    });\r\n\r\n    thisModule.factory('MockedResource', ['$httpBackend', '$log', function ($httpBackend, $log) {\r\n            this.api = '';\r\n            this.fakeUrl = 'http://alpha.pipservices.net';\r\n\r\n            this.regEsc = function (str) {\r\n                    //Escape string to be able to use it in a regular expression\r\n                    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\r\n            }\r\n\r\n            this.IdRegExp = /[a-zA-Z0-9]{24}/.toString().slice(1, -1);\r\n            this.QueryRegExp = /[\\d\\w-_\\.%\\s]*$/.toString().slice(1, -1);\r\n            this.EndStringRegExp = /$/.toString().slice(1, -1);\r\n\r\n            this.register = function() {}\r\n\r\n        return this;\r\n    }]);\r\n\r\n    thisModule.factory('TruePathResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n            var child = Object.create(MockedResource);\r\n\r\n            child.register = function() {\r\n                $httpBackend.whenGET(/.*/).passThrough();           \r\n            }\r\n            return child;\r\n    }]);\r\n\r\n})();\r\n \r\n\r\n\r\n// /api/users/:party_id/resend_email_verification\r\n// /.*\\/friends\\/(\\w+)/\r\n\r\n// $httpBackend.whenGET(/\\/contacts\\/(\\d+)/, undefined, ['id']).respond(function(method, url, data, headers, params) {\r\n//   var contact = findContactById(params.id);\r\n\r\n//   if (contact == null) {\r\n//     return [404, undefined, {}];\r\n//   }\r\n\r\n//   return [200, contact, {}];\r\n// });\r\n\r\n// $httpBackend.whenPUT(/\\/contacts\\/(\\d+)/, undefined, undefined, ['id']).respond(function(method, url, data, headers, params) {\r\n//   var contact = findContactById(params.id),\r\n//       parsedData = angular.fromJson(data);\r\n\r\n//   if (contact == null) {\r\n//     return [404, undefined, {}];\r\n//   }\r\n\r\n//   angular.extend(contact, parsedData);\r\n\r\n//   return [200, contact, {}];\r\n// });\r\n\r\n// // Delete; remove existing contact.\r\n// $httpBackend.whenDELETE(/\\/contacts\\/(\\d+)/, undefined, ['id']).respond(function(method, url, data, headers, params) {\r\n//   var contact = findContactById(params.id);\r\n\r\n//   if (contact == null) {\r\n//     return [404, undefined, {}];\r\n//   }\r\n\r\n//   // Replace contacts array with filtered results, removing deleted contact.\r\n//   contacts.splice(contacts.indexOf(contact), 1);\r\n\r\n//   return [200, undefined, {}];\r\n// });\r\n\r\n\r\n\r\n\r\n// ----\r\n\r\n// //GET tag/\r\n// $httpBackend.whenGET(collectionUrl).respond(function(method, url, data, headers) {\r\n//     $log.log('Intercepted GET to tag', data);\r\n//     return [200, TagRepo.data, {/*headers*/}];\r\n// });\r\n\r\n// //GET tag/<id>\r\n// $httpBackend.whenGET( new RegExp(regexEscape(collectionUrl + '/') + IdRegExp ) ).respond(function(method, url, data, headers) {\r\n//     $log.log('Intercepted GET to tag/id');\r\n//     var id = url.match( new RegExp(IdRegExp) )[0];\r\n    \r\n//     if (!TagRepo.index[id]) {\r\n//         return [404, {} , {/*headers*/}];\r\n//     }\r\n\r\n//     return [200, TagRepo.index[id], {/*headers*/}];\r\n// });\r\n\r\n\r\n// -------\r\n\r\n //get all stores\r\n        // var storeUrl = \"/api/stores\";\r\n        // $httpBackend.whenGET(storeUrl).respond(stores);\r\n\r\n        // //get single store\r\n        // var singleStoreUrl = new RegExp(storeUrl + \"/[0-9][0-9]*\", '');\r\n        // $httpBackend.whenGET(singleStoreUrl)\r\n\r\n// -------\r\n\r\n// var regexGetTicket = new RegExp('/ticket/([0-9]+)');\r\n// $httpBackend.whenGET({\r\n//     test: function(url) {\r\n//         return regexGetTicket.test(url);\r\n//     }\r\n// })        \r\n\r\n\r\n// --------\r\n// To create a pattern from a string url, with optional query-string, you could use this:\r\n\r\n// var targetUrl = \"/somelink\";\r\n// var pattern = new RegExp(\r\n//     \"^\" +\r\n//     targetUrl.replace(/[-[\\]{}()*+?.\\\\^$|]/g, \"\\\\$&\") + /* escape special chars */\r\n//     \"(?:\\\\?.*)?$\");\r\n// $httpBackend.when('GET', pattern).respond(function(method, url, data) {\r\n//   var queryMatch = /^[^#]*\\?([^#]*)/.exec(url);\r\n//   var query = queryMatch ? queryMatch[1] : \"\";\r\n//   // url = \"/somelink?abc=123\" -> query = \"abc=123\"\r\n// });","/**\r\n * @file MockedServersActivitiesResource\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * \r\n * Mocked:\r\n * /api/servers/activities/:id\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocked.ServersActivities', ['ngMockE2E', 'ngResource']);\r\n\r\n    thisModule.factory('MockedServersActivitiesResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/servers/activities';\r\n\r\n        child.register = function() {\r\n\r\n                   \r\n        }\r\n\r\n        return child;\r\n    }]);\r\n\r\n})();\r\n ","/**\r\n * @file MockedTipsResource\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * \r\n * Mocked:\r\n * /api/tips/:id\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocked.Tips', ['ngMockE2E', 'ngResource']);\r\n\r\n    thisModule.factory('MockedTipsResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/tips';\r\n\r\n        child.register = function() {\r\n\r\n                   \r\n        }\r\n\r\n        return child;\r\n    }]);\r\n\r\n})();","/**\r\n * @file pipMockedUsers\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * \r\n * Mocked:\r\n * GET /api/users/current\r\n * GET /api/users\r\n * POST /api/users\r\n * GET /api/users/:id\r\n * PUT /api/users/:id\r\n * DELETE /api/users/:id\r\n * \r\n * GET /api/users/:party_id/sessions\r\n * DELETE /api/users/:party_id/sessions/:id\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMocked.Users', ['ngMockE2E', 'ngResource']);\r\n\r\n    thisModule.factory('MockedCurrentUserResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/users/current';\r\n\r\n        child.register = function() {\r\n\r\n            // GET /api/users/current\r\n            $httpBackend.whenGET(child.fakeUrl + child.api).respond(function(method, url, data, headers) {\r\n               console.log('MockedCurrentUserResource whenGET current', data, headers);\r\n\r\n                 return [200, {}, {}];\r\n            });\r\n                \r\n        }\r\n\r\n        return child;\r\n    }]);\r\n\r\n    thisModule.factory('MockedUsersResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        child.api = '/api/users';\r\n\r\n        child.register = function() {\r\n\r\n            // GET /api/users\r\n            $httpBackend.whenGET(child.fakeUrl + child.api).respond(function(method, url, data, headers) {\r\n               console.log('MockedUsersResource whenGET collection', data, headers);\r\n\r\n                 return [200, {}, {}];\r\n            });\r\n\r\n            // POST /api/users\r\n            $httpBackend.whenPOST(child.fakeUrl + child.api).respond(function(method, url, data, headers, params) {\r\n                console.log('MockedUsersResource whenPOST', data, headers, params);\r\n\r\n                return [200, {}, {}];\r\n            }); \r\n\r\n            // GET /api/users/:id\r\n            $httpBackend.whenGET(new RegExp(child.regEsc(child.fakeUrl + child.api + '/') + child.IdRegExp + child.EndStringRegExp)).respond(function(method, url, data, headers) {\r\n               console.log('MockedUsersResource whenGET user', data, headers);\r\n\r\n                 return [200, {}, {}];\r\n            });\r\n\r\n            // PUT /api/users/:id\r\n            $httpBackend.whenPUT(new RegExp(child.regEsc(child.fakeUrl + child.api + '/') + child.IdRegExp + child.EndStringRegExp)).respond(function(method, url, data, headers) {\r\n                console.log('MockedUsersResource whenPUT', data, headers);\r\n\r\n                return [200, {}, {}];\r\n            });   \r\n\r\n            // DELETE /api/users/:id\r\n            $httpBackend.whenDELETE(new RegExp(child.regEsc(child.fakeUrl + child.api + '/') + child.IdRegExp + child.EndStringRegExp)).respond(function(method, url, data, headers) {\r\n                console.log('MockedUsersResource whenPUT', data, headers);\r\n\r\n                return [200, {}, {}];\r\n            });                       \r\n        }\r\n\r\n        return child;\r\n    }]);\r\n\r\n    thisModule.factory('MockedUserSessionsResource', ['$httpBackend', '$log', 'MockedResource', function ($httpBackend, $log, MockedResource) {\r\n        var child = Object.create(MockedResource);\r\n\r\n        // /api/users/:party_id/sessions/:id\r\n        child.api = '/api/users/:party_id/sessions/:id';\r\n\r\n        child.register = function() {\r\n            // GET /api/users/:party_id/sessions\r\n            $httpBackend.whenGET(new RegExp(child.regEsc(child.fakeUrl + '/api/users/') + child.IdRegExp + child.regEsc('/sessions')))\r\n            .respond(function(method, url, data, headers) {\r\n               console.log('MockedUserSessionsResource whenGET current', data, headers);\r\n// expected \r\n// [{\r\n// \"address\": \"109.254.67.37\"\r\n// \"client\": \"chrome\"\r\n// \"platform\": \"windows 6.3\"\r\n// \"last_req\": \"2016-05-17T16:12:10.525Z\"\r\n// \"opened\": \"2016-05-16T12:11:33.039Z\"\r\n// \"id\": \"5739b8f5deca605c33c842cc\"\r\n// }]\r\n                 return [200, {}, {}];\r\n            });\r\n\r\n            // DELETE  /api/users/:party_id/sessions/:id\r\n            $httpBackend.whenDELETE(new RegExp(child.regEsc(child.fakeUrl + '/api/users/') + child.IdRegExp + child.regEsc('/sessions/') + child.IdRegExp + child.EndStringRegExp))\r\n            .respond(function(method, url, data, headers) {\r\n                console.log('MockedUserSessionsResource whenDELETE', data, headers);\r\n// expected \r\n// OK\r\n                return [200, {}, {}];\r\n            });      \r\n        }\r\n\r\n        return child;\r\n    }]);    \r\n\r\n})();\r\n \r\n"],"sourceRoot":"/source/"}